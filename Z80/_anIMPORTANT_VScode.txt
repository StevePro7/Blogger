IMPORTANT VS code
09/12/2020

Here is how to setup VS Code and Emulicious debugger on Linux


Install VS Code
TODO
get link from previous


Install Emulicious on Linux


Launch VS Code
install the following extensions

ASM Code Lens
Z80 Assembly
Z80 Macro Assembler
wla-dx

Code Runner defaults to Z80 Macro Assembler despite the fact that 
Ctrl + Alt + N does not seem to work for Z80 asm


Emulicious debugger
https://marketplace.visualstudio.com/items?itemName=emulicious.emulicious-debugger


Setup wla-dx
TODO
instructions here
wla-dx.txt


Launch VS code
Open HelloWorld
main.asm


Add COMPILE.SH
clear

wla-z80 main.asm

echo [objects] > linkfile
echo main.o >> linkfile

wlalink linkfile output.sms

java -jar ~/SEGA/Emulicious/Emulicious.jar output.sms


chmod +x compile.sh


In VS Code
New terminal
./compile.sh


should be assemble + run output.sms


DEBUG
click the run button
add launch.json file

Emulicious debugger

launch.json
{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "type": "emulicious-debugger",
            "request": "launch",
            "name": "Launch in Emulicious",
            "program": "${workspaceFolder}/main.asm",
            "port": 58870,
            "stopOnEntry": true
        }
    ]
}



IMPORTANT
must launch Emulicious first
Tools | Remote Debugging | Enabled

F5 run

Set breakpoint
now should launch main.asm using Emulicious debugger and break at breakpoint


SUMMARY from scratch on Windows

Reference
E:\Steven\INSTALLATIONSEGA\ROM_Sega3\HelloWorld

01.
Launch Emulicious


02.
Launch VS Code
Open HelloWorld
e.g.
E:\Steven\INSTALLATIONSEGA\ROM_Sega3\HelloWorld

Set breakpoint in ASM code


03.
set launch.json file as above to automagically launch main.asm
first

F5 to run
Launch in Emulicious

Emulicious external debugger pops up
F5 to step in Emulicious debugger

then the VS Code debugger should trigger and break at breakpoint set

04.
Step thru code in VS Code using F10, F11 etc
Can see debugging information
e.g.
Variables
Stackframe
VDP
PSG
etc


Finally, can hit refresh button in the debugging toolbar to reload everything


If don't want to debug step thru the code and just run then can simply
right click main.asm
OR
Ctrl + Alt + N
code runner to launch directly

TROUBLESHOOTING
if you get the error about the localhost then Emulicious is NOT running thus VS Code cannot connect
e.g.
connect ECONNREFUSED 127.0.0.1:58870

If you see this error make sure that you are running Emulicious and that Remote Debugging is enabled.



VS Code update
if prompted to update VS Code then click the link and download the DEB file
close VS Code

Terminal
cd
cd Downloads
sudo dpkg -i code_1.51*

open VS Code



Linux
Code runner Ctrl + Alt + N was not working
so I tried to re-bind the keyboard shortcut
https://superuser.com/questions/1501391/why-did-keyboard-shortcut-ctrl-alt-n-stop-working-in-visual-studio-code

GO to File -> preferences -> Keyboard Shortcuts and open it.


But this didn't work
in fact worse : when I try to right click main.asm and Run code I get the error
Code lanugage not supported or defined

recognizes the Ctrl + Alt + N because gets the same error

bottom right
Z80 Macro Assembler
set to auto detect


I *think* this error is correct because when I look again at Code Runner extension
I don't see that Z80 asm is supported... but it did seem to work before



KEYBOARD shortcut
finally got this working

Windows

Reference:
https://stackoverflow.com/questions/59844962/execute-a-bat-file-on-keypress-in-vscode

.vscode folder
copy launch.json
rename tasks.json

{
    "label": "build",
    "type": "shell",
    "command": "compile.bat",
    "presentation": {"echo": true, "reveal": "always", "focus": false, "panel": "shared", "showReuseMessage": false, "clear": true},
    "group": {"kind": "build", "isDefault": true},
}


main.asm
Ctrl + Shift + B

now runs the compile.bat file!!


Linux

.vscode folder
copy launch.json
rename tasks.json

{
    "label": "build",
    "type": "shell",
    "command": "./Compile.bat",
    "presentation": {"echo": true, "reveal": "always", "focus": false, "panel": "shared", "showReuseMessage": false, "clear": true},
    "group": {"kind": "build", "isDefault": true},
}

main.asm
Ctrl + Shift + B

now runs the compile.bat file!!



Temporarily add to source control so don't lose work done tonight:


E:\Steven\INSTALLATIONSEGA\ROM_Sega3\HelloWorld