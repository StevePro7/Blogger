<span style="font-family:verdana;font-size:85%;"> 

<u>Commercial Games</u><br />
Now let us enhance this process to disassemble some commercial games built for the Sega Master System.  This way, we may gain insight into the early development process plus be able to hack original source code!
<br /><br />
<b>Transbot</b><br />
Create C:\Transbot or ~/Transbot folder.  Copy <b>.vscode</b> folder from above with launch.json and tasks.json files.  Copy build.bat + build.sh too.  Don't forget to grant execute permission chmod +x build.sh command.
<br /><br />
Download Transbot ROM.  Launch Emulicious | Open ROM.  Tools menu | Debugger | press Ctrl + A to select all disassembled code.  Save as Transbot.asm.  Update all ".incbin ..." statements using the following utility:
<br /><br />
<i>Utility</i><br />
Download Binary-File-Write utility.  Copy both Transbot.asm and Transbot.sms files to input folder.  Update the config file | set key="fileName" value to "Transbot".  Run BinaryFileWrite.exe.  Copy output to Transbot folder.
<br /><br />
Launch VS Code.  Open Transbot folder.  All ".incbin" statements should now refer to binary data files.  Press Ctrl + Shift + B to execute build script => compile, link and run.  Press F5 to debug step through Z80 code!
<br /><br />
<b>Flicky</b><br />
Create C:\Flicky or ~/Flicky folder.  Repeat entire process for Transbot as above but with Flicky.sg ROM.  Copy the <b>.vscode</b> folder with launch.json and tasks.json files plus build.bat and build.sh.  Retrive main.asm + data folder from utility.  Press Ctrl + Shift + B to execute build script + press F5 to debug step through Z80 code!
<br /><br />
Create C:\Flicky or ~/Flicky folder.  Repeat entire process for Transbot above but with Flicky.sg ROM.  Copy <b>.vscode</b> folder with with launch.json and tasks.json files and build.bat + build.sh.  Retrive main.asm and data folder.  Press Ctrl + Shift + B to execute build script and press F5 to debug step through Z80 code!
<br /><br />
</span>