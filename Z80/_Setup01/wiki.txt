<span style="font-family:verdana;font-size:85%;"> 

In 2013, we checked out Sega Console Programming to setup video game development environment for the Sega Master System: an 8-bit video game console based on the Z80 chip.  Here we used WLA-DX assembler.  Remember, original cartridge-based video games built for 8-bit Sega Retro Gaming consoles were written in pure assembly!  
<br /><br /> 
Now we would like to extend our game development environment to Windows and Mac OS/X and Linux for cross platform development and also add better support for automated builds with debugging functionality.
<!--
<a href="https://1.bp.blogspot.com/-44q770Rl34g/YBCMbvaANvI/AAAAAAAAGfg/0zfCv2b-e2wcEhnjg9cngL7oZRDnLDzhACLcBGAsYHQ/s724/vhelin.png" imageanchor="1"><img alt="" border="0" width="98%" data-original-height="370" data-original-width="724" src="https://1.bp.blogspot.com/-44q770Rl34g/YBCMbvaANvI/AAAAAAAAGfg/0zfCv2b-e2wcEhnjg9cngL7oZRDnLDzhACLcBGAsYHQ/s600/vhelin.png"/></a>
-->
Let's check it out!
<br /><br />

<b>Assembler</b><br />
Recommended is the WLA DX assembler.  Git clone the wla-dx repository and follow OS specific instructions.
<br /><br />

<u>Windows</u><br />
Clone wla-dx repository to C:\GitHub\vhelin.  Instructions on GitHub describe how to build WLA-LX for Linux whereas WLA-DX can be built for Windows directly from Visual Studio 2017 from the wla-dx\windows folder.
<br />
<table width="99%" border="1">
<tr>
<td>&nbsp;1. Start | run | cmd</td>
<td>&nbsp;5. Launch WLA DX.sln in Visual Studio 2017</td>
</tr>
<tr>
<td>&nbsp;2. cd C:\GitHub\vhelin</td>
<td>&nbsp;6. Build solution as Release | x86 configuration</td>
</tr>
<tr>
<td>&nbsp;3. git clone https://github.com/vhelin/wla-dx.git</td>
<td>&nbsp;7. WLA DX compiler wla-z80.exe built</td>
</tr>
<tr>
<td>&nbsp;4. cd C:\GitHub\vhelin\wla-dx\windows</td>
<td>&nbsp;8. WLA DX linker wlalink.exe built</td>
</tr>
</table>
<!--
<a href="https://1.bp.blogspot.com/-F4HCdzIrhTE/YBCSWruTWmI/AAAAAAAAGfs/H_wSDDEa5Gkef_fLO3nQzwpg5RJRGV2sgCLcBGAsYHQ/s799/windows.png" style="display: block; padding: 1em 0; text-align: center; "><img alt="" border="0" width="98%" data-original-height="183" data-original-width="799" src="https://1.bp.blogspot.com/-F4HCdzIrhTE/YBCSWruTWmI/AAAAAAAAGfs/H_wSDDEa5Gkef_fLO3nQzwpg5RJRGV2sgCLcBGAsYHQ/s600/windows.png"/></a>
-->
If you have followed Sega Console Programming tutorial and you already have ConTEXT installed then copy the updated binaries wla-z80.exe and wlalink.exe built from previous step to output folder C:\wlaz80win32.
<br /><br />
Also, tweak the original Compile.bat file as all main entry points will now be via main.asm thus align main.o object file during wla-z80 compilation.  Finally, it seems -drvs wlalink linker flag as now no longer required.
<table width="99%" border="1">
<tr>
<td>
<table border="0">
<tr>
<td>
<pre class="csharp" name="code">
 echo Compile
 ::"%WLAPATH%wla-z80.exe" -o %1 main.o
   "%WLAPATH%wla-z80.exe" -o main.o %1
</pre>
</td>
</tr>
</table>
</td>
<td>
<table border="0">
<tr>
<td>
<pre class="csharp" name="code">
 echo Link
 ::"%WLAPATH%wlalink.exe" -drvs linkfile output.sms
   "%WLAPATH%wlalink.exe"       linkfile output.sms
</pre>
</td>
</tr>
</table>
</td>
</tr>
</table>
<br />
<br />  
</span>