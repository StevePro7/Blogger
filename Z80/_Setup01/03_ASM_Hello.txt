<span style="font-family:verdana;font-size:85%;"> 

<u>Hello World</u><br />
Download and extract the obligatory "Hello World" to C:\HelloWorld or ~/HelloWorld.  Rename file main.asm.  Launch VS Code.  Open HelloWorld folder.  Some things to remember when coding Z80 source cross platform:
  <!--
TODO - format this ordered list better  
<ol>
  <li>01. / forward slash not back slash</li>
  <li>02. case sensitive e.g. include files</li>
  <li>03. wla-dx01 error CR btwn variables</li> 
</ol>
  -->
<br /><br />

Add build.bat file to compile, link and run souce code on Windows and build.sh file to compile, link and run souce code on Mac OS/X + Linux.  Don't forget to grant execute permission <b>chmod +x build.sh</b> command:
  <!--
<table width="99%" border="1">
<tr>
<td>&nbsp;<a href="https://github.com/SteveProXNA/TODO/build.bat">build.bat</a></td>
<td>&nbsp;<a href="https://github.com/SteveProXNA/TODO/build.sh">build.sh</a></td>
</tr>
<tr>
<td>
<table border="0">
<tr>
<td width="99%">
<pre class="csharp" name="code">
&nbsp;@echo off
&nbsp;cls

&nbsp;wla-z80 -o main.o main.asm 

&nbsp;echo [objects] > linkfile
&nbsp;echo main.o >> linkfile

&nbsp;wlalink linkfile output.sms

&nbsp;::java -jar C:\SEGA\Emulicious\Emulicious.jar output.sms
&nbsp;output.sms
</pre>
</td>
</tr>
</table>
</td>
<td>
<table border="0">
<tr>
<td>
<pre class="csharp" name="code">
&nbsp;@echo off
&nbsp;clear

&nbsp;wla-z80 -o main.o main.asm

&nbsp;echo [objects] > linkfile
&nbsp;echo main.o >> linkfile

&nbsp;wlalink linkfile output.sms

&nbsp;java -jar ~/SEGA/Emulicious/Emulicious.jar output.sms
&nbsp;::output.sms
</pre>
</td>
</tr>
</table>
</td>
</tr>
</table>
  -->
<br /><br />
<br /><br />
  
Press Ctrl + Shift + B to execute build script.  If/when promted to add tasks.json file: Configure Build Task... Create tasks.json file from template | Others.  This will create <b>.vscode</b> hidden folder and tasks.json file here.
  <br /><br />
<!--
tasks.json
<pre class="csharp" name="code">
{
    "version": "2.0.0",
    "label": "build",
    "type": "shell",
    "linux": {
        "command": "./build.sh"
    },
    "osx": {
        "command": "./build.sh"
    },
    "windows": {
        "command": "build.bat"
      },
    "presentation": {"echo": true, "reveal": "always", "focus": false, "panel": "shared", "showReuseMessage": false, "clear": true},
    "group": {"kind": "build", "isDefault": true},
}
</pre>
-->
Press Ctrl + Shift + B to execute build script => compile, link and run output.sms launched from Emulicious!
<br /><br />
IMPORTANT<br />
Assumption Emulicious installed C:\SEGA\Emulicious on Windows or ~/SEGA/Emulicious Mac OS/X + Linux.
  
</span> 