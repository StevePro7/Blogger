<span style="font-family:verdana;font-size:85%;"> 
<b>Assembler</b><br />
Recommended is the WLA DX assembler.  Git clone the wla-dx repository and follow OS specific instructions.
<br /><br />

<u>Windows</u><br />
Clone wla-dx repository to C:\GitHub\vhelin.  Instructions on GitHub describe how to build WLA-LX for Linux whereas WLA-DX can be built for Windows directly from Visual Studio 2017 from the wla-dx\windows folder.
<br />
<table width="99%" border="1">
<tr>
<td>&nbsp;1. Start | run | cmd</td>
<td>&nbsp;5. Launch WLA DX.sln in Visual Studio 2017</td>
</tr>
<tr>
<td>&nbsp;2. cd C:\GitHub\vhelin</td>
<td>&nbsp;6. Build solution as Release | x86 configuration</td>
</tr>
<tr>
<td>&nbsp;3. git clone https://github.com/vhelin/wla-dx.git</td>
<td>&nbsp;7. WLA DX compiler wla-z80.exe built</td>
</tr>
<tr>
<td>&nbsp;4. cd C:\GitHub\vhelin\wla-dx\windows</td>
<td>&nbsp;8. WLA DX linker wlalink.exe built</td>
</tr>
</table>
<br />
If you have followed Sega Console Programming tutorial and you already have ConTEXT installed then copy the updated binaries wla-z80.exe and wlalink.exe built from previous step to output folder C:\wlaz80win32.
<br /><br />
Also, tweak the original Compile.bat file as all main entry points will now be via main.asm thus align main.o object file during wla-z80 compilation.  Finally, it seems -drvs wlalink linker flag as now no longer required.
<table width="99%" border="1">
<tr>
<td>
<table border="0">
<tr>
<td>
<pre class="csharp" name="code">
 echo Compile
 ::"%WLAPATH%wla-z80.exe" -o %1 main.o
   "%WLAPATH%wla-z80.exe" -o main.o %1
</pre>
</td>
</tr>
</table>
</td>
<td>
<table border="0">
<tr>
<td>
<pre class="csharp" name="code">
 echo Link
 ::"%WLAPATH%wlalink.exe" -drvs linkfile output.sms
   "%WLAPATH%wlalink.exe"       linkfile output.sms
</pre>
</td>
</tr>
</table>
</td>
</tr>
</table>
<br />
<br />
  
<u>Mac OS/X</u><br />
Instructions on GitHub describe how to build WLA-LX for Linux whereas WLA-DX can be built for Mac OS/X using brew.  Install brew as per instructions.  Then follow all instructions here to install wla-dx on Mac OS/X.
<br /><br />  

Launch Terminal.  Enter the following commands below.  Accept all prompts to install the latest Xcode tools:
<pre class="csharp" name="code">
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" < /dev/null 2> /dev/null
Accept prompt to install the latest Xcode tools
brew install wla-dx
</pre>
<br />
IMPORTANT<br />
During installation, you may encounter the following error:
<i>homebrew-core is a shallow clone. To `brew update`, first run: git -C /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core fetch --unshallow
</i>
<br /><br />
At the terminal, type brew update or brew update --force.  If you still get errors then type the following:
<pre class="csharp" name="code">
git -C /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core fetch --unshallow
brew update --force
brew install wla-dx
</pre>
<br />

<u>Linux</u><br />
Clone wla-dx repo to ~/GitHub/vhelin.  Follow all instructions on GitHub which describes how to build WLA-LX for Linux.  Launch Terminal | enter commands.  After completion, wla-z80 and wlalink should work universally.
<table width="100%" border="1">
<tr>
<td>&nbsp;1. cmake --version</td>
<td>&nbsp;5. mkdir build && cd build</td>
</tr>
<tr>
<td>&nbsp;2. cd ~/GitHub/vhelin</td>
<td>&nbsp;6. cmake ..</td>
</tr>
<tr>
<td>&nbsp;3. git clone https://github.com/vhelin/wla-dx.git</td>
<td>&nbsp;7. cmake --build . --config Release</td>
</tr>
<tr>
<td>&nbsp;4. cd ~/GitHub/vhelin/wla-dx</td>
<td>&nbsp;8. cmake -P cmake_install.cmake</td>
</tr>
</table>
<br />

</span>