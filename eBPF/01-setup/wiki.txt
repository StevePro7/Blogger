<span style="font-family:verdana;font-size:85%;">
TODO - introduction on eBPF
<br />
<div class="separator" style="clear: both;"><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEglM6Dz0JhtGBagI4XR-6pkK1OnpsQQKcemem2ArVYzyS3jI3LPC772Rk6mh00XUanwrZhbE7f1oe6krSRXGPJhoybEUFDt2_64jnx-oEJm_4d0vQMY8AZzElYQTIJm5tEez4qQGeRkYz3a1e0D29_cWlDMjF_L2xdrr9bATfv4aKQUeU6m5AmFUTsv9oI/s850/EBPF_logo.png" style="display: block; padding: 1em 0; text-align: center; "><img alt="" border="0" width="600" data-original-height="296" data-original-width="850" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEglM6Dz0JhtGBagI4XR-6pkK1OnpsQQKcemem2ArVYzyS3jI3LPC772Rk6mh00XUanwrZhbE7f1oe6krSRXGPJhoybEUFDt2_64jnx-oEJm_4d0vQMY8AZzElYQTIJm5tEez4qQGeRkYz3a1e0D29_cWlDMjF_L2xdrr9bATfv4aKQUeU6m5AmFUTsv9oI/s600/EBPF_logo.png"/></a></div>
<br /><br />
  
Launch <a href="http://steveproxna.blogspot.com/2019/10/linux-setup-cheat-sheet-ii.html">CLion</a> | New Project | C Executable | Location: <b>/home/stevepro/HelloWorld</b> | Language std: <b>C11</b>
<br />
<!--
<a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgx1jnPxY9wKeLiBxiWSdHs7nGqOys4cryU1sEMkwvjEYP9vDeN83YAOEV3oE5igHbamVKTFF-iyUSPBijQ_cN8T1LUEZod4BwnpFMt6IzASsQFDhJEiYjFWHnYDmnT7woVQ8BBrNVrxsuXR8Ybf7Voi1wjNY7jUatuu092Qb2iybxjHat2tNg4GH0E/s800/HelloWorld01.png"><img alt="" border="0" width="98%" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgx1jnPxY9wKeLiBxiWSdHs7nGqOys4cryU1sEMkwvjEYP9vDeN83YAOEV3oE5igHbamVKTFF-iyUSPBijQ_cN8T1LUEZod4BwnpFMt6IzASsQFDhJEiYjFWHnYDmnT7woVQ8BBrNVrxsuXR8Ybf7Voi1wjNY7jUatuu092Qb2iybxjHat2tNg4GH0E/s600/HelloWorld01.png"/></a>
-->
<br />
Create
<br /><br />
A new C project will be created which automatically adds the following two files: main.c and CMakeLists.txt
<br />
<!--
<table width="99%" border="1">
<tr>
<td>&nbsp;main.c
</td>
<td>&nbsp;CMakeLists.txt
</td>
</tr>
<tr>
<td>
<table border="0">
<tr>
<td width="99%">
<pre class="csharp" name="code">
&nbsp;#include &lt;stdio.h&gt;
&nbsp;int main()
&nbsp;{
&nbsp;  printf( "Hello, World!\n" );
&nbsp;  return 0;
&nbsp;}
</pre>
</td>
</tr>
</table>
</td>
<td>
<table border="0">
<tr>
<td width="99%">
<pre class="csharp" name="code">
&nbsp;cmake_minimum_required(VERSION 3.19)
&nbsp;project(HelloWorld C)
&nbsp;
&nbsp;set(CMAKE_C_STANDARD 11)
&nbsp;
&nbsp;add_executable(HelloWorld main.c)
</pre>
</td>
</tr>
</table>
</td>
</tr>
</table>
-->
<br />
In the Terminal window within CLion IDE enter the following commands to install and buld the libbpf library:
<br>
<!--
<table width="99%" border="1">
<tr>
<td>
&nbsp;git clone https://github.com/libbpf/libbpf<br />
&nbsp;cd libbpf/src<br />
&nbsp;make<br />
&nbsp;sudo make install<br />
&nbsp;cd ../..<br />
</td>
</tr>
</table>
-->
<br>
Next, enter commands to create the <a href="https://blog.aquasec.com/vmlinux.h-ebpf-programs">vmlinux.h</a> file.  Create and build the Hello BPF program + skeleton file:
<br>
<!--
<table width="99%" border="1">
<tr>
<td>
&nbsp;bpftool btf dump file /sys/kernel/btf/vmlinux format c > vmlinux.h<br />
&nbsp;touch hello.bpf.c<br />
&nbsp;clang -g -O2 -target bpf -D__TARGET_ARCH_x86_64 -I libbpf/src -c hello.bpf.c -o hello.bpf.o<br />
&nbsp;bpftool gen skeleton hello.bpf.o > hello.skel.h<br />
</td>
</tr>
</table>
<!-- -->
<br>
<!--
<table width="99%" border="1">
<tr>
<td>&nbsp;hello.bpf.c
</td>
<td>&nbsp;CMakeLists.txt
</td>
</tr>
<tr>
<td>
<table border="0">
<tr>
<td width="99%">
<pre class="csharp" name="code">
&nbsp;#include "vmlinux.h"
&nbsp;#include "bpf_helpers.h"
&nbsp;
&nbsp;SEC("tracepoint/syscalls/sys_enter_execve")
&nbsp;int hello_bpf(struct trace_event_raw_sys_enter *ctx)
&nbsp;{
&nbsp;  bpf_printk("Hello world!\n");
&nbsp;  return 0;
&nbsp;}
&nbsp;char LICENSE[] SEC("license") = "GPL";
</pre>
</td>
</tr>
</table>
</td>
<td>
<table border="0">
<tr>
<td width="99%">
<pre class="csharp" name="code">
&nbsp;cmake_minimum_required(VERSION 3.19)
&nbsp;project(HelloWorld C)
&nbsp;
&nbsp;set(CMAKE_C_STANDARD 11)
&nbsp;
&nbsp;include_directories(.)
&nbsp;link_directories(libbpf libbpf/src)
&nbsp;
&nbsp;add_executable(HelloWorld main.c)
&nbsp;target_link_libraries(HelloWorld bpf elf z)
</pre>
</td>
</tr>
</table>
</td>
</tr>
</table>
<br>
-->

Rename main.c to hello.c and update the driver program code.  Edit configurations | Run with root privileges
<br>
<!--
<a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjSzYLhQDy1CIQWyE_mU13bb_WEJjCLeGrwqN4blumS2PnyALwJHMoEY90Y9PeCLUp1zDTN7g_QwmbcUEuQWsEMVwhgvxHOdtn9JMLkRsxgVW9MFlVEXhS9dlHHTL9WsIE9vqT4xuOj_mPdnQn1aBjcJYke3cJcp4aq_FaU5tfWlM_14jG7P7dpHrnS/s844/HelloWorld03.png"><img alt="" border="0" width="98%" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjSzYLhQDy1CIQWyE_mU13bb_WEJjCLeGrwqN4blumS2PnyALwJHMoEY90Y9PeCLUp1zDTN7g_QwmbcUEuQWsEMVwhgvxHOdtn9JMLkRsxgVW9MFlVEXhS9dlHHTL9WsIE9vqT4xuOj_mPdnQn1aBjcJYke3cJcp4aq_FaU5tfWlM_14jG7P7dpHrnS/s600/HelloWorld03.png"/></a>
-->
<br>
Set break point in hello.c | HelloWorld | Debug or Press F5 to launch your first Hello World BPF program!
<br>
<!--
<a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEikCEtyl0dPlR4FSyipBBhsFTk0ajre60fNXd5gCmLqhizoFEzk7vzepmd0hN26zIeHDIf8Fh8qxa45ibS5WGAZUZuvjPvbEol5ONna6RpSXUzHlDKGLA4SjApTY3MphH4TMa8bsSfATHb8Y5iri8EBo7MFzjRr8CgQh9t6bqWLhabjFJJMa9HQOaLx/s941/HelloWorld04.png"><img alt="" border="0" width="98%" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEikCEtyl0dPlR4FSyipBBhsFTk0ajre60fNXd5gCmLqhizoFEzk7vzepmd0hN26zIeHDIf8Fh8qxa45ibS5WGAZUZuvjPvbEol5ONna6RpSXUzHlDKGLA4SjApTY3MphH4TMa8bsSfATHb8Y5iri8EBo7MFzjRr8CgQh9t6bqWLhabjFJJMa9HQOaLx/s600/HelloWorld04.png"/></a>
-->
<br>
</span>
