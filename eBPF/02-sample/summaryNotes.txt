16-Jul-2023

Sample
summary

ambitious goal to contribute to the Linux kernel source code - seems almost impossible
but with technology like eBPF = another way in
therefore

it will be interesting to see if eBPF really takes off as a technology
6yrs old but still in its infancy although a few contributors believe that long term
there will be less source code merged in directly into the Linux kernel source code
and more custom code abstracted away as eBPF programs
only time will tell

mention Windows adopting more the Linux kernel and there is Windows BPF...??

to summarize
coding [low level] C programs for old hardware such as the Sega Master System, Sega Mega Drive [Genesis]
and even the Nintendo Game Boy has proved valuable experience in order to transfer those skills cross platform to low level systems application programming like eBPF!


Jan-2023
However, low level systems application programming like eBPF, in Linux, is perhaps one of the very few development experiences available in modern day professional Software Engineering that it's similar in stature! Therefore, I believe this is something definitely worth investigating more in the coming year J



Golang Cheat Sheet II
Nov-2022
Summary
To summarize, Go is now popular due to its ability to deliver highly scalable concurrent computing software. Plus, Cgo also allows Go programs to interoperate with C libraries, distributed cloud computing, and eBPF.

Therefore, writing low level C code to target 8-bit Sega Master System hardware and 16-bit Sega Mega Drive has proved to be very valuable experience for Cgo applications which could assist in Go + Cloud Computing!


Retro-14
Jan-2022

Another example eBPF: a revolutionary technology that can run sandboxed C programs safely and efficiently extending the capabilities of the Linux kernel, without requiring changes to kernel source code or load kernel modules, consumed from Go packages providing high-performance networking in cloud native environments.




https://ebpf.io
https://www.infoq.com/presentations/facebook-google-bpf-linux-kernel


https://en.wikipedia.org/wiki/EBPF
https://docs.kernel.org/bpf/libbpf/libbpf_overview.html