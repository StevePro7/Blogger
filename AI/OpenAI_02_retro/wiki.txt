<span style="font-family:verdana;font-size:85%;">

In the previous <a href="https://steveproxna.blogspot.com/2024/09/openai-farma-cheat-sheet.html">post</a>, we checked out <a href="https://github.com/openai/gym">OpenAI Gym</a>: an open source library in Python used for reinforcement learning algorithms development to communicate between environments such as classic Atari video games.
<br /><br />
In the this post, we check out <a href="https://github.com/openai/retro">OpenAI Retro</a>: source code repository which lets you turn classic video games into Gym environments for reinforcement learning with classic Atari video games and many other Emulated Systems including: <a href="https://steveproxna.blogspot.com/2023/11/gbdk-programming-sample.html">Nintendo</a> GameBoy / GameBoy Color, the Sega <a href="https://steveproxna.blogspot.com/2020/11/sgdk-programming-sample.html">MegaDrive</a> and the Sega <a href="https://steveproxna.blogspot.com/2022/07/devkitsms-programming-sample-v.html">Master System</a>.
<br />
<!--
<a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjPg5lDn5BIDcj0-l8C-P-tTwHoFTFbPHaOFt0LcF-7Oc7-5teLiMO0y9Od48m4ZJRZ5IXWBQczz1YQ-V4DhZ-I3Xg6kkxdhj6qv52OWb1IALk1TXgRYu24MELKHgpGyj_b4NVMJ9nd-bLnHD2U8NwvhyphenhyphenUrB7K3OKx6kFoSXBNTSQk-H3KSjfllSXJmGVE/s1856/Strider-Genesis.png"><img alt="" border="0" width="98%" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjPg5lDn5BIDcj0-l8C-P-tTwHoFTFbPHaOFt0LcF-7Oc7-5teLiMO0y9Od48m4ZJRZ5IXWBQczz1YQ-V4DhZ-I3Xg6kkxdhj6qv52OWb1IALk1TXgRYu24MELKHgpGyj_b4NVMJ9nd-bLnHD2U8NwvhyphenhyphenUrB7K3OKx6kFoSXBNTSQk-H3KSjfllSXJmGVE/s600/Strider-Genesis.png"/></a>
-->
<br />
Let's check it out!
<br /><br />

<u>Gym Retro</u></br />
In May 2018, Open AI announce <a href="https://openai.com/index/gym-retro">Gym Retro</a>: a platform for reinforcement learning research on classic 8-bit and 16-bit video games.  The release includes games from the Sega Genesis and Sega Master System, and Nintendoâ€™s NES, SNES, and Game Boy consoles.  The release also includes an <a href="https://retro.readthedocs.io/en/latest/integration.html">Integration Tool</a> that lets you create save states, find memory locations + design scenarios that reinforcement learning agents can solve.   
<br /><br />

<b>Hello Gym Retro</b><br />
Create new Hello Gym Retro type environment.  Launch PyCharm | New Project | Name: HelloGymRetro [~/]
<br />
<!--
<a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgdSdgYzbDsRlAkMUCrUAVg_wlqmeoK_DWAX9dbwPzMzWBPVWNTpsGYGyYMYdC_53SeQNYXG1DOdjOBnR9gBmXfMzh3AqhPgKR8fK_GxmxOqPyi4WxXXb1hOGRw8T4gqJNXknJJbZGymne8fOA85SzjXxC0QKfZbUlwn5uN-B4BJZ5ao05OUJsIApV_sZY/s800/HelloGymRetro.png"><img alt="" border="0" width="98%" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgdSdgYzbDsRlAkMUCrUAVg_wlqmeoK_DWAX9dbwPzMzWBPVWNTpsGYGyYMYdC_53SeQNYXG1DOdjOBnR9gBmXfMzh3AqhPgKR8fK_GxmxOqPyi4WxXXb1hOGRw8T4gqJNXknJJbZGymne8fOA85SzjXxC0QKfZbUlwn5uN-B4BJZ5ao05OUJsIApV_sZY/s600/HelloGymRetro.png"/></a>
-->
<br />
<!--
<table width="99%" border="1">
<tr>
<td width="50%">&nbsp;python -m venv .venv<br /></td>
<td width="50%">&nbsp;pip install gym-retro<br /></td>
</tr>
<tr>
<td width="50%">&nbsp;source .venv/bin/activate<br /></td>
<td width="50%">&nbsp;pip install --upgrade pip<br /></td>
</tr>
</table>
<br />
-->
CODE
<br />
<!--
<table width="99%" border="1">
<tr><td>
&nbsp;import retro<br />
&nbsp;env = retro.make(game="Airstriker-Genesis")<br />
&nbsp;observation = env.reset()<br />
&nbsp;<br />
&nbsp;while True:<br />
&nbsp;&nbsp;&nbsp;&nbsp;action = env.action_space.sample()<br />
&nbsp;&nbsp;&nbsp;&nbsp;observation, reward, done, info = env.step(action)<br />
&nbsp;&nbsp;&nbsp;&nbsp;env.render()<br />
&nbsp;&nbsp;&nbsp;&nbsp;if done:<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;observation = env.reset()<br />
&nbsp;env.close()<br />
</td></tr>
</table>
-->
<br />
IPMORTANT
<br />
At the time of this writing you may experience the following errors.  Here are errors encountered + solutions:  
<br />
<!--
<table width="99%" border="1">
<tr>
<td>&nbsp;ERROR #1</td>
<td colspan="2">
&nbsp;AttributeError: module 'gym.utils.seeding' has no attribute 'hash_seed'<br />
</td>
</tr>
<tr>
<td>&nbsp;<a href="https://stackoverflow.com/questions/73710249/openai-gym-retro-error-attributeerror-module-gym-utils-seeding-has-no-attri">Solution</a></td>
<td>&nbsp;pip uninstall -y gym</td>
<td>&nbsp;pip install gym==0.25.2</td>
</tr>
</table>
<br />

<table width="99%" border="1">
<tr>
<td>&nbsp;ERROR #2</td>
<td colspan="2">
&nbsp;ModuleNotFoundError: No module named 'gym.envs.classic_control.rendering'<br />
</td>
</tr>
<tr>
<td>&nbsp;<a href="https://www.reddit.com/r/reinforcementlearning/comments/uklf29/no_module_named_gymenvsclassic_controlrendering">Solution</a></td>
<td>&nbsp;pip uninstall -y gym</td>
<td>&nbsp;pip install gym==0.21.0</td>
</tr>
</table>
<br />

<table width="99%" border="1">
<tr>
<td>&nbsp;ERROR #3&nbsp</td>
<td>
&nbsp;ERROR: Could not find a version that satisfies the requirement gym==0.21.0 <br />
</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="https://github.com/openai/gym/issues/3202">Solution</a></td>
<td>&nbsp;pip install<br />&nbsp;git+https://github.com/openai/gym.git@9180d12e1b66e7e2a1a622614f787a6ec147ac40</td>
</tr>
</table>
-->
<br />
Blah
</span>