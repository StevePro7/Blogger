<span style="font-family:verdana;font-size:85%;">

<u>Gymnasium</u><br />
The main problem with Gym was the lack of <a href="https://wandb.ai/mukilan/intro_to_gym/reports/A-Gentle-Introduction-to-OpenAI-Gym--VmlldzozMjg5MTA3">maintenance</a>: OpenAI did not allocate substantial resources for the development of Gym since its inception seven years earlier, and, by2020, it simply was not maintained.
<br /><br />
<a href="https://gymnasium.farama.org">Gymnasium</a> is a maintained fork of the OpenAI Gym library. The Gymnasium interface is simple, pythonic, and capable of representing general RL problems with a compatibility wrapper for old Gym environments:
<br /><br />
<b>Hello Gymnasium</b><br />
Creating <a href="https://github.com/Farama-Foundation/Gymnasium">/Gymnasium</a> environment e.g. Cart Pole.  Launch PyCharm | New Project | HelloCartPoleGymnasium
<!-- -->
<br />
<a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgrCtegmxsCyyUxkHw-DwP6kq7zpxFr7HwS-TJt8c0k9XY9WL42ndIB63rReQuzogmEzpQ4VixqHuL0j4FkXWWsJgiKn2KDoBAPRU0CF_HBhPzeoM5PmAofENH969LJte7Y0UqDly0CQC8qoO3ECUxj-uaK_R_MYzhi3HoaUDvWVU5PRuyFj0NMqtZ_z1s/s800/PyCharmGymnasium.png"><img alt="" border="0" width="98%" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgrCtegmxsCyyUxkHw-DwP6kq7zpxFr7HwS-TJt8c0k9XY9WL42ndIB63rReQuzogmEzpQ4VixqHuL0j4FkXWWsJgiKn2KDoBAPRU0CF_HBhPzeoM5PmAofENH969LJte7Y0UqDly0CQC8qoO3ECUxj-uaK_R_MYzhi3HoaUDvWVU5PRuyFj0NMqtZ_z1s/s600/PyCharmGymnasium.png"/></a>
<!-- -->
<br />
<table width="99%" border="1">
<tr>
<td>
&nbsp;source .venv/bin/activate<br />
&nbsp;pip install --upgrade pip<br />
</td>
<td>
&nbsp;pip install gymnasium</br>
&nbsp;pip install gymnasium[classic-control]</br>
</td>
</tr>
</table>
<br />
CODE
<table width="99%" border="1">
<tr><td>
&nbsp;import gymnasium as gym<br />
&nbsp;env = gym.make("CartPole-v1", render_mode="human")<br />
&nbsp;observation, info = env.reset(seed=42)<br />
&nbsp;<br />
&nbsp;for _ in range(1000):<br />
&nbsp;&nbsp;&nbsp;&nbsp;action = env.action_space.sample()<br />
&nbsp;&nbsp;&nbsp;&nbsp;observation, reward, terminated, truncated, info = env.step(action)<br />
&nbsp;&nbsp;&nbsp;&nbsp;if terminated or truncated:<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;observation, info = env.reset()<br />
&nbsp;env.close()<br />
</tr></td>
</table>  
<br />
  
</span>