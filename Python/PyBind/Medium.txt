Pybind11 Tutorial: Binding C++ Code to Python
14-Feb-2025

https://medium.com/@ahmedfgad/pybind11-tutorial-binding-c-code-to-python-337da23685dc


find -type f -name '*.cpp' -exec grep -Hni 'PYBIND11_MODULE' {} \;
./src/retro.cpp:462:PYBIND11_MODULE(_retro, m)

#include <pybind11/pybind11.h>
namespace py = pybind11;

PYBIND11_MODULE(_retro, m) 
{
	m.doc() = "libretro bindings";

	m.def("core_path", &::corePath, py::arg("hint") = py::none());
	m.def("data_path", &::dataPath, py::arg("hint") = py::none());
}


PYBIND11_MODULE
binds your C++ functions to Python
allowing Python to call your C++ functions as if they were native Python functions


PYBIND11_MODULE macro
defines the module given the name _retro [example]

.def()
bind individual functions
each bound function is given 
- a Python accessible name
- a refernece to the C++ implementation
- optional docstrings
- arguments specified using pybind11::arg()



setup.py