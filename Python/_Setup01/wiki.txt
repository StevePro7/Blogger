<span style="font-family:verdana;font-size:85%;">

<a href="https://en.wikipedia.org/wiki/Python_(programming_language)">Python</a> is an interpreted high-level and general purpose programming language.  Python 2.0 was released in 2000 but officially discontinued in 2020.  Python 3.x is now the preferred version for most projects e.g. v3.7.
<br /><br />
Python is commonly used in artificial intelligence and machine learning projects with the help of libraries like <a href="https://en.wikipedia.org/wiki/TensorFlow">TensorFlow</a>, <a href="https://en.wikipedia.org/wiki/Keras">Keras</a>, <a href="https://en.wikipedia.org/wiki/PyTorch">Pytorch</a> and <a href="https://en.wikipedia.org/wiki/Scikit-learn">Scikit</a>-learn.  There is also open source Python distribution <a href="https://en.wikipedia.org/wiki/Anaconda_(Python_distribution)">Anaconda</a> used for data science and machine learning applications that aims to simplify package management and deployment.

<br />
<!--
<a href="https://3.bp.blogspot.com/-zsz7aH9QG5Y/XwcjVZwhYOI/AAAAAAAAGUk/eLx9ksWmn1kgzgF3hAsBd7TTOJ0kHhUlQCLcBGAsYHQ/s1600/Python-Image.jpg" imageanchor="1" ><img border="0" src="https://3.bp.blogspot.com/-zsz7aH9QG5Y/XwcjVZwhYOI/AAAAAAAAGUk/eLx9ksWmn1kgzgF3hAsBd7TTOJ0kHhUlQCLcBGAsYHQ/s640/Python-Image.jpg" width="98%" height="200" /></a>
-->
<br />
Let's check it out!
<br />

<br /><br />
<u>Install Python</u><br />
Install Python on Windows, Mac OS/X and Linux.  Install <a href="https://en.wikipedia.org/wiki/Pip_(package_manager)">pip</a> as the de facto standard package-management system.  Install Anaconda for future AI projects.  Finally, install + configure an <a href="https://en.wikipedia.org/wiki/Integrated_development_environment">IDE</a> for Python programming.
<br /><br />
<b>Windows</b><br />
Follow <a href="https://www.youtube.com/watch?v=V_ACbv4329E">instructions </a> here how to install Python 3 on Windows.  <a href="https://www.python.org/downloads">Download</a> latest version of Python for Windows including IDLE pip + documentation.  Add Python to <a href="https://en.wikipedia.org/wiki/PATH_(variable)">PATH</a> variable making it easier to configure your system.
<br /><br />
<b>Mac OS/X</b><br />
Python is installed by default on most Mac OS/X systems.  Launch terminal + type <i>python</i> and <i>pip</i> to confirm.
<br /><br />
<b>Linux</b><br />
Python is installed by default on most Linux systems.  Launch terminal + type <i>python</i>.  However you may also need to install <i><a href="https://www.tecmint.com/install-pip-in-linux">pip</a></i>.  <a href="https://opensource.com/article/19/5/python-3-default-mac">Update</a> your <i>~/.bashrc</i> file as necessary to use Python 3.7 by default instead of Python 2.
<br />
<!--
<table width="99%" border="1">
<tr>
<td valign=top>&nbsp;Install + Update + Aliases Python3</td>
<td valign=top>&nbsp;Ubuntu Linux unable to locate package python-pip</td>
</tr>
<tr>
<td valign=top>
<pre class="csharp" name="code">
&nbsp;sudo apt install python3-pip
&nbsp;python -m pip install --upgrade pip
&nbsp;echo "alias python=python3" >> ~/.bashrc
&nbsp;echo "alias pip=pip3" >> ~/.bashrc
</pre>
</td>
<td valign=top>
<pre class="csharp" name="code">
&nbsp;sudo apt-get install software-properties-common
&nbsp;sudo apt-add-repository universe
&nbsp;sudo apt-get update
&nbsp;sudo apt-get install python3-pip
</pre>
</td>
</tr>
</table>
-->
<br />
IMPORTANT<br />
Verify which python version and which pip version are installed and location where these are both installed:
<br />
<!--
<table width="99%" border="1">
<tr>
<td valign=top>&nbsp;python --version</td>
<td valign=top>&nbsp;which python</td>
</tr>
<tr>
<td valign=top>&nbsp;pip    --version</td>
<td valign=top>&nbsp;which pip</td>
</tr>
</table>
<br />
-->
<br /><br />
<u>Install Anaconda</u><br />
Follow instructions to install open source Python distribution Anaconda for <a href="https://docs.anaconda.com/anaconda/install/windows">Windows</a> and <a href="https://docs.anaconda.com/anaconda/install/mac-os">Mac OS/X</a> and <a href="https://docs.anaconda.com/anaconda/install/linux">Linux</a>
<br />
<!--
<table width="99%" border="1">
<tr>
<td valign=top>&nbsp;SYSTEM</td>
<td valign=top>&nbsp;LOCATION</td>
</tr>
<tr>
<td valign=top>&nbsp;<a href="https://repo.anaconda.com/archive/Anaconda3-2020.02-Windows-x86_64.exe">Windows</a></td>
<td valign=top>&nbsp;%USERPROFILE%\Anaconda3</td>
</tr>
<tr>
<td valign=top>&nbsp;<a href="https://repo.anaconda.com/archive/Anaconda3-2020.02-MacOSX-x86_64.pkg">Mac OS/X</a></td>
<td valign=top>&nbsp;/anaconda3</td>
</tr>
<tr>
<td valign=top>&nbsp;<a href="https://repo.anaconda.com/archive/Anaconda3-2020.02-Linux-x86_64.sh">Linux</a></td>
<td valign=top>&nbsp;/anaconda3</td>
</tr>
</table>
-->
<br />
<b>Windows</b><br />
Add the following four environment variables: System | Advanced system settings | Environment Variables:
<br />
<!--
<table width="99%" border="1">
<tr>
<td valign=top>&nbsp;%USERPROFILE%\Anaconda3</td>
<td valign=top>&nbsp;%USERPROFILE%\Anaconda3\libs</td>
</tr>
<tr>
<td valign=top>&nbsp;%USERPROFILE%\Anaconda3\Scripts</td>
<td valign=top>&nbsp;%USERPROFILE%\Anaconda3\Library\bin</td>
</tr>
</table>
-->
<br />
<b>Mac OS/X</b><br />
Follow all prompts from the install wizard.  Anaconda should install at /anaconda3 by default with aliases set.
<br /><br />
<b>Linux</b><br />
Launch terminal as root user.  Type <i>bash ~/Downloads/Anaconda3-2020.02-Linux-x86_64.sh</i>.  For consistency with the Mac set install location to <i>/anaconda3</i>.  After install <a href="https://groups.google.com/a/continuum.io/forum/#!topic/anaconda/R0xZt0ioBl8">launch</a> Anaconda navigator.  Enter the following:
<br />
<!--
<pre class="csharp" name="code">
&nbsp;source ~/anaconda*/bin/activate root
&nbsp;anaconda-navigator
</pre>
-->
<br />
Update your <i>~/.bashrc</i> file as necessary to prefer Anaconda Python especially for data science AI + ML work.
<br />
<!--
<pre class="csharp" name="code">
&nbsp;alias python=/anaconda3/bin/python
&nbsp;alias pip=/anaconda3/bin/pip
</pre>
-->
<br />
Finally, create Anaconda desktop <a href="https://askubuntu.com/questions/1017284/cant-create-anaconda-shortcut-to-launch-from-desktop-on-ubuntu-17-10">shortcut</a>: create the following <i>Anaconda.desktop</i> at <i>/usr/share/applications/</i>  Add the text below.  Enter <i>sudo echo "PATH=$PATH:/anaconda3/bin" >> /etc/environment</i> at the terminal.
<br /><br />
<!--
<i>Anaconda.desktop</i>
<pre class="csharp" name="code">
[Desktop Entry]
Type=Application
Name=Anaconda
Exec=anaconda-navigator
Terminal=false
Icon=/anaconda3/lib/python3.7/site-packages/anaconda_navigator/static/images/anaconda-icon-256x256.png
</pre>
-->
Restart Linux.  From settings type "Anaconda" to prompt Anaconda Navigator + resume projects from there.
<br />
<br />
IMPORTANT<br />
Verify which Anaconda version is installed using <i>conda --version</i> command and where installed <i>where conda</i>.
<br />
<br /><br />

<u>Install PyCharm</u><br />
<a href="https://en.wikipedia.org/wiki/PyCharm">PyCharm</a> is an integrated development environment used specifically for Python.  Install PyCharm during the Anaconda install or from navigator.  Otherwise install PyCharm for <a href="https://www.jetbrains.com/pycharm/download/#section=windows">Windows</a> and <a href="https://www.jetbrains.com/pycharm/download/#section=mac">Mac OS/X</a> and <a href="https://www.jetbrains.com/pycharm/download/#section=linux">Linux</a> directly.
<br /><br />
Launch PyCharm.  Click "Configure" cog drop down | Settings.  Set the base interpreter to match the Python location for Anaconda.  Click cog | Show All | Click "+" | Virtualenv Environment.  Enter the following details:
<!--
<br />
<a href="https://4.bp.blogspot.com/-b7QB0JiKw3E/XwwvycZpY9I/AAAAAAAAGVc/imDRPBHbD5IvOpfAx5w-mSeLN6Mn8Z7EgCLcBGAsYHQ/s1600/PythonInterpreter.png" imageanchor="1" ><img border="0" src="https://4.bp.blogspot.com/-b7QB0JiKw3E/XwwvycZpY9I/AAAAAAAAGVc/imDRPBHbD5IvOpfAx5w-mSeLN6Mn8Z7EgCLcBGAsYHQ/s640/PythonInterpreter.png" width="98%" height="250" /></a>
<br />
<table width="99%" border="1">
<tr>
<td valign=top>&nbsp;SYSTEM</td>
<td valign=top>&nbsp;LOCATION</td>
</tr>
<tr>
<td valign=top>&nbsp;Windows</td>
<td valign=top>&nbsp;%USERPROFILE%\Anaconda3\python.exe</td>
</tr>
<tr>
<td valign=top>&nbsp;Mac OS/X</td>
<td valign=top>&nbsp;/anaconda3/bin/python</td>
</tr>
<tr>
<td valign=top>&nbsp;Linux</td>
<td valign=top>&nbsp;/anaconda3/bin/python</td>
</tr>
</table>
<br />
<br />
-->
<br /><br />
<b>Plugins</b><br />
Configure cog | Plugins.  Install <a href="https://www.pylint.org">pylint</a> as a code analysis tool that follows the recommended <a href="https://www.python.org/dev/peps/pep-0008">PEP8</a> style guide.  Restart IDE.  Pylint is handy tool to check Python code especially for developers used to static code compiler!
<br /><br />

<b>Shortcuts</b><br />
<a href="https://stackoverflow.com/questions/11502796/intellij-idea-track-active-item-in-solution-explorer">Track</a> active item in solution explorer similar to Visual Studio: Click cog to right of Project and Always Select Opened File.  Hit shift key twice for quick <a href="https://www.jetbrains.com/help/pycharm/searching-everywhere.html">search</a>.  Remember Rename files and folder is in the Refactor menu!
<br />
<!--
<table width="99%" border="1">
<tr>
<td valign=top>&nbsp;Ctrl + F12</td>
<td valign=top>&nbsp;Prompt <a href="https://intellij-support.jetbrains.com/hc/en-us/community/posts/206597225-Is-there-a-dropdown-where-i-can-see-all-methods-of-the-class-">popup</a> to list all the methods in the class</td>
</tr>
<tr>
<td valign=top>&nbsp;Ctrl + Shift + N</td>
<td valign=top>&nbsp;Prompt popup to search for text found in all files</td>
</tr>
<tr>
<td valign=top>&nbsp;Ctrl + Shift + I</td>
<td valign=top>&nbsp;View <a href="https://www.jetbrains.com/help/pycharm/viewing-reference-information.html">definition</a> of function or method in the class</td>
</tr>
<tr>
<td valign=top>&nbsp;Ctrl + Click function</td>
<td valign=top>&nbsp;Navigate to function definition or method in class</td>
</tr>
<tr>
<td valign=top>&nbsp;Ctrl + Alt + Left arrow</td>
<td valign=top>&nbsp;Navigate backwards to previous location</td>
</tr>
<tr>
<td valign=top>&nbsp;Ctrl + Alt + Right arrow</td>
<td valign=top>&nbsp;Navigate forwards to the next location</td>
</tr>
</table>
-->
<br />
IMPORTANT<br />
On Linux <a href="https://stackoverflow.com/questions/48685449/intellij-navigate-back-shortcut-not-working">navigate</a>  may actually be Shift + Alt + arrow keys instead of Ctrl due to keymap shortcut conflicts!
<br /><br />

<br />
<u>Hello PyCharm</u><br />
Launch PyCharm.  Create New Project | "HelloPyCharm".  Enter the following details as Anaconda interpreter:
<br />
<!--
<a href="https://1.bp.blogspot.com/-KfbkcmeHrCM/XwxP9OfU5fI/AAAAAAAAGVo/lxsYe6YcQMwekPCFDy3I_EiK8UvjcQp8wCLcBGAsYHQ/s1600/HelloPyCharm.png" imageanchor="1" ><img border="0" src="https://1.bp.blogspot.com/-KfbkcmeHrCM/XwxP9OfU5fI/AAAAAAAAGVo/lxsYe6YcQMwekPCFDy3I_EiK8UvjcQp8wCLcBGAsYHQ/s640/HelloPyCharm.png" width="98%" height="275" /></a>
-->
<br />
PyCharm uses <a href="https://docs.python-guide.org/dev/virtualenvs">virtualenv</a> tool to create an isolated Python environment.  Virtualenv creates <b>venv</b> folder in the current directory with Python executable files and a copy of pip to install other modules and packages.
<br />
<br />
Create simple "HelloWorld.py".  Enter Python code <i>print('Hello World')</i>.  Right click file | Run ""HelloWorld".
<br /><br />

<b>Module Not Found</b><br />
Update script | Import module not currently installed e.g. <i>import numpy</i>.  Run script: ModuleNotFoundError
<br />
<!--
<a href="https://2.bp.blogspot.com/-47NAwDHvNHg/XwxYDoRuBLI/AAAAAAAAGV0/MesjsCUi-5Q1UKC2rczDZLAIfuboPycIACLcBGAsYHQ/s1600/ModuleNotFound.png" imageanchor="1" ><img border="0" src="https://2.bp.blogspot.com/-47NAwDHvNHg/XwxYDoRuBLI/AAAAAAAAGV0/MesjsCUi-5Q1UKC2rczDZLAIfuboPycIACLcBGAsYHQ/s640/ModuleNotFound.png" width="98%" height="200" /></a>
<br />
-->
<br />
Launch PyCharm terminal.  Enter <i>python -m pip install numpy</i> to install module.  Re-run script with success.
<br />
<!--
<a href="https://1.bp.blogspot.com/-W7yie3NEPBw/XwxY3_XQJII/AAAAAAAAGV8/u44wM87UqKcdJ3VuARlfExN_rhHF71YfgCLcBGAsYHQ/s1600/PipInstallModule.png" imageanchor="1" ><img border="0" src="https://1.bp.blogspot.com/-W7yie3NEPBw/XwxY3_XQJII/AAAAAAAAGV8/u44wM87UqKcdJ3VuARlfExN_rhHF71YfgCLcBGAsYHQ/s640/PipInstallModule.png" width="98%" height="225" /></a>
<br />
-->
<br />
Alternatively, execute <i><a href="https://pip.pypa.io/en/stable/reference/pip_freeze">pip freeze</a></i> to dump all required modules for project into <i>requirements.txt</i> and install:
<br />
<!--
<pre class="csharp" name="code">
&nbsp;pip freeze > requirements.txt
&nbsp;pip install -r requirements.txt
</pre>
-->
<br />
<br />
<u>Code Sample</u><br />
Let's test drive develop a simple code sample as a Python module that could be deployed as Python package.
<br /><br />

IMPORTANT<br />
A module is a single Python script file whereas a <a href="https://packaging.python.org/tutorials/packaging-projects">package</a> is a collection of modules.  A package is a directory of Python modules containing an additional <i>__init__.py</i> file to distinguish from a directory of Python scripts.
<br /><br />
Launch PyCharm...
<br /><br />

<br /><br />
</span>