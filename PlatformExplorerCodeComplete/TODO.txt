TODO
09/04/2019

Homebrew
The <a href="http://www.smspower.org/Homebrew">Homebrew</a> community at SMS Power celebrates Sega 8-bit preservation and fanaticism each year with its annual competitions.  Therefore, this is always an opportunity to participate by entering these games!

Platform Explorer presented the challenge of reverse engineering original Platformer starter kit code written for a more modern CPU with floating point functionality to [run on] an old 8-bit system with no FPU!  Thankfully there are blog posts like "Writing a platformer for the TIC-80 fantasy console" available on the Internet which [really] helped with building more optimized code by pre-calculating platformer physics velocity and acceleration and caching in integer lookup tables.

https://en.wikipedia.org/wiki/Floating-point_unit
https://medium.com/@btco_code/writing-a-platformer-for-the-tic-80-virtual-console-6fa737abe476

//estimating the platformer physics using integer lookup tables / arrays.


Summary
To summarize, the 2019 coding competition featured the fewer entries [3] than last year [6] but the hacks section seems to have grown in popularity
// which suggests this could be a cool avenue to explore. 

Also, it seems that there is a vibrant community based around the Sega Genesis [MegaDrive] in which [Indie game] developers may be opting to develop for this 16-bit console instead of the 8-bit Sega Master System.  Similarly to the devkitSMS, there is another popular devkit SGDK for the Genesis also written in C.  Therefore, apart from a different install and setup, in theory, the development process could be same :)

https://en.wikipedia.org/wiki/Sega_Genesis


Blog - physics, hack, coding x3 + Sega MD future

https://segaretro.org/IPS
http://www.smspower.org/Hacks/HowToUseBPSAndIPSPatchFiles


Physics
https://medium.com/@btco_code/writing-a-platformer-for-the-tic-80-virtual-console-6fa737abe476


Writing a platformer for the TIC-80 fantasy console.html
C:\stevepro\Personal\_Platformer


As the hardware in the Sega Master System is very constrained compared to today's standards


As always 








TODO2
devkitSMS III
write there about the program challenges
e.g.
myabs() function and the performance degradation