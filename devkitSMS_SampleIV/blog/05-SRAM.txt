<b>SRAM</b><br />
Persisting important data like Hi Scores and player settings across game sessions makes for better gaming experience.  Here is the Candy Kid implementation with <a href="https://www.smspower.org/forums/16013-DevkitSMSSMSlibMissingRequestingFeatures">SRAM support</a> currently included in the devkitSMS:
<br /><br />
<a href="https://github.com/SteveProXNA/CandyKidSMS/blob/master/dev/engine/storage_manager.c">storage_manager.c</a>
<pre class="csharp" name="code">
#define MAGIC			0xACE0B004
#define FINAL			0xFF

// Global variable.
struct_storage_object global_savegame_object;

unsigned char engine_storage_manager_available()
{
	struct_storage_object *savegame = ( struct_storage_object* ) ( devkit_SMS_SRAM() );
	unsigned char foundMagic;

	devkit_SMS_enableSRAM();
	foundMagic = MAGIC == savegame->Magic;
	devkit_SMS_disableSRAM();
	return foundMagic;
}
void engine_storage_manager_read()
{
	struct_storage_object *savegame = ( struct_storage_object* ) ( devkit_SMS_SRAM() );
	struct_state_object *st = &global_state_object;

	devkit_SMS_enableSRAM();
	st->state_object_high_score = savegame->save_high_score;
//	...
	devkit_SMS_disableSRAM();
}
void engine_storage_manager_write()
{
	struct_storage_object *savegame = ( struct_storage_object* ) ( devkit_SMS_SRAM() );
	struct_state_object *st = &global_state_object;

	devkit_SMS_enableSRAM();
	savegame->Magic = MAGIC;
	savegame->save_high_score = st->state_object_high_score;
//	...
	savegame->terminal = FINAL;
	devkit_SMS_disableSRAM();
}
void engine_storage_manager_erase()
{
	struct_storage_object *savegame = ( struct_storage_object* ) ( devkit_SMS_SRAM() );

	devkit_SMS_enableSRAM();
	savegame->Magic = 0x00000000;
	savegame->save_high_score = DEF_HI_SCORE;
//	...
	savegame->terminal = FINAL;
	devkit_SMS_disableSRAM();
}
</pre>




OLD
<br /><br />
Persisting important data like Hi Scores, checkpoints, player and game settings and makes for better user experience and is very simple to implement with current version of the devkitSMS includes SRAM support.
<br /><br />

Persisting important data like hi scores, checkpoints, player settings, game settings makes for better user experience and is very simple to implement with current version of the devkitSMS includes SRAM support
<br /><br />
Persisting important data like hi scores, player settings, checkpoints, game settings makes for a better user experience and is actually very simple to implement with the current version of the devkitSMS includes SRAM support
<br /><br />