<span style="font-family:verdana;font-size:85%;">
<u>Example</u><br />
As an example, replicate the simple program from 2017 that sets the border colors of the screen using devkitSMS but this time we will port the Windows build cross platform to Linux and include debugging!
<br /><br />  
Create new directory HelloWorld: <b>~/HelloWorld</b>.  Copy these files across crt0_sms.rel, SMSlib.h, SMSlib.lib.  Launch Visual Studio Code.  Open HelloWorld directory.  Create new file main.c and enter the following code:
<br />
<!--
<br />
<b>main.c</b>
<pre class="csharp" name="code">
#include "SMSlib.h"
void main (void)
{
  SMS_setSpritePaletteColor(0, RGB(3,3,3));
  SMS_displayOn();
  for (;;)
  {
    SMS_waitForVBlank();
  }
}

SMS_EMBED_SEGA_ROM_HEADER(9999, 0);
SMS_EMBED_SDSC_HEADER(1, 0, 2017, 9, 15, "StevePro Studios", "Hello World", "Simple Sega Master System demo to run on real hardware!");
</pre>
-->
<br />
<u>Build</u><br />
Manually compile, link and execute the Hello program.  Launch command prompt: Start | Run | cmd.
<br />
<!--
<a href="https://4.bp.blogspot.com/-1A-Osw4R9LA/WP-1dzTxPzI/AAAAAAAAD90/fTJS6gHr4ykeAKtJg_cGDmxMsFWoKJRAwCLcB/s1600/HelloWorldCode.jpg" imageanchor="1" ><img border="0" src="https://4.bp.blogspot.com/-1A-Osw4R9LA/WP-1dzTxPzI/AAAAAAAAD90/fTJS6gHr4ykeAKtJg_cGDmxMsFWoKJRAwCLcB/s640/HelloWorldCode.jpg" width="98%" height="184" /></a>
<br />
-->
<br />
Change directory cd ~/HelloWorld.  Next, execute following 3x commands (in bold) but add <b>debug</b> keyword:
<table width="99%" border="1">
<tr>
<td valign="top">&nbsp;ACTION</td>
<td valign="top">&nbsp;COMMAND</td>
<td valign="top">&nbsp;OUTPUT</td>
</tr>
<tr>
<td valign="top">&nbsp;Compile&nbsp;</td>
<td valign="top">&nbsp;<b>sdcc --debug -c -mz80 main.c</b></td>
<td valign="top">&nbsp;main.rel</td>
</tr>
<tr>
<td valign="top">&nbsp;Link</td>
<td valign="top">&nbsp;<b>sdcc --debug -o output.ihx -mz80 --data-loc 0xC000 --no-std-crt0 crt0_sms.rel<br />&nbsp;main.rel SMSlib.lib</b></td>
<td valign="top">&nbsp;output.ihx</td>
</tr>
<tr>
<td valign="top">&nbsp;Exceute</td>
<td valign="top">&nbsp;<b>ihx2sms output.ihx output.sms</b></td>
<td valign="top">&nbsp;output.sms&nbsp;</td>
</tr>
</table>
<br />
Finally, type <b>output.sms</b>.  The Hello program should launch in the Fusion emulator.
<br />
Congratulations! You have just written your first SMS program using <a href="https://github.com/sverx/devkitSMS">devkitSMS</a>.
<a href="https://1.bp.blogspot.com/-orCl08hJsAw/WP-1Uoz5vaI/AAAAAAAAD9w/ZNUofyjnC4E_x5Tz0xQ7yFMC6QW9jRQ9gCLcB/s1600/HelloWorldOutput.jpg" imageanchor="1" ><img border="0" src="https://1.bp.blogspot.com/-orCl08hJsAw/WP-1Uoz5vaI/AAAAAAAAD9w/ZNUofyjnC4E_x5Tz0xQ7yFMC6QW9jRQ9gCLcB/s640/HelloWorldOutput.jpg" width="98%" height="500" /></a>
<br /><br />

main.c build.bat copy build.bat to build.sh | chmod +x build.sh
<br /><br />
  Reference: PortWinLin
Linux | Launch Visual Studio Code | ensure Emulicious Debugger is installed
  <br /><br />
  
Copy .vscode hidden folder over
settings.json
launch.json
tasks.json
  
  Emulicious Debugger
  In 2021, we installed the Emulicious Debugger initially for Z80 Programming Setup but also extended similar setup to debug step through C source code.
    <br /><br />
  
VS Code.txt | Settings
  
<br /><br />
  
  
In 2017, we checked out <a href="http://steveproxna.blogspot.com/2017/09/devkitsms-programming-setup.html">devkitSMS Programming Setup</a> to build 8-bit video games in <a href="http://en.wikipedia.org/wiki/C_(programming_language)">C</a> for the <a href="http://en.wikipedia.org/wiki/Master_System">Sega Master System</a> (SMS).  Here we use SDCC v3.6.9 which allows maximum 32KB for your main ROM game code size.
<br /><br />
Now, the latest <a href="https://github.com/sverx/devkitSMS">devkitSMS</a> requires <a href="http://sdcc.sourceforge.net">SDCC</a> 4.x which supports banked code which means it is now possible to page code out transparently.  Plus we'd also like to build <a href="http://www.smspower.org">SMS</a> projects cross platform for Windows and Linux.
<br />
<!--
<br />
<a href="https://3.bp.blogspot.com/-V-s3bFQyWXE/WQB7Lw64JpI/AAAAAAAAD-g/GEoxW1vrGGccMvp3aedQdqaYxtXCHVz3QCLcB/s1600/devkitsms.jpg" imageanchor="1" ><img border="0" src="https://3.bp.blogspot.com/-V-s3bFQyWXE/WQB7Lw64JpI/AAAAAAAAD-g/GEoxW1vrGGccMvp3aedQdqaYxtXCHVz3QCLcB/s640/devkitsms.jpg" width="98%" height="300" /></a>
-->
<br />
Letâ€™s check it out! 
<br /><br />
  
<br /><br />
  
<u>devkitSMS</u>
<br />
The <a href="https://github.com/sverx/devkitSMS">devkitSMS</a> is a collection of tools and code built specifically for the Sega Master System but also supports homebrew development using C language for <a href="https://en.wikipedia.org/wiki/SG-1000">SG-1000</a>, <a href="https://en.wikipedia.org/wiki/SG-1000#SC-3000">SC-3000</a> and the Sega <a href="https://en.wikipedia.org/wiki/Game_Gear">Game Gear</a>.
<br /><br />
  
TODO<u>Software</u>
<br />
Follow all instructions from the previous post: this documents how to setup the pre-requisite software.
<br /><br />
Here is a summary of all required software to be installed:
<br /><br />
TODO complete partial table
<br /><br />
  
<b>Windows</b><br />
Download and install <a href="https://sourceforge.net/projects/sdcc/files/sdcc-win64/4.1.0/sdcc-4.1.0-x64-setup.exe/download">sdcc-4.1.0-</a>x64-setup.exe to C:\Program Files\SDCC.  Choose all features to install.
<br />
<!--
<a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj9uu45CRtwIEOo8gtwCHFbYucP7VEGBIzhSKXE6Gg4DCG4oe57g9Q1-qM99MsFQwnOtPomvuc4E4EHDFQqSh7AP37wsE_TTbspjCGttTeWG41BcNOEeNonMziEI58bAQmWKttnLv8WJjjUYxgt5UhI_p0U5r8aP_syb8GhXLcK95SiOtodkdJYFx54/s499/Win05.png"><img alt="" border="0" width="98%" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj9uu45CRtwIEOo8gtwCHFbYucP7VEGBIzhSKXE6Gg4DCG4oe57g9Q1-qM99MsFQwnOtPomvuc4E4EHDFQqSh7AP37wsE_TTbspjCGttTeWG41BcNOEeNonMziEI58bAQmWKttnLv8WJjjUYxgt5UhI_p0U5r8aP_syb8GhXLcK95SiOtodkdJYFx54/s600/Win05.png"/></a>
<br />
-->
<br />
There should be no extra configuration except add C:\Program Files\SDCC\bin to the Environment PATH.
<br />
<!--
<a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhbigqleqkDOKp4Qcf67driJ8Te-wEQXcv-H_1Hkp2A9qBYduLEqE0LgJbR9dYnGJEVJuMb2tZbNSG4pu5AvtFIuLrKNCGi198srGW-kxJ1R1w3r6BU59Srwb8wjZrEVA6bugePVugGUf5Tvwc0yqTdkXXAhb80ngSYEjCsqE01GEV_Rx3L0hhyGTwj/s499/Win06.png"><img alt="" border="0" width="98%" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhbigqleqkDOKp4Qcf67driJ8Te-wEQXcv-H_1Hkp2A9qBYduLEqE0LgJbR9dYnGJEVJuMb2tZbNSG4pu5AvtFIuLrKNCGi198srGW-kxJ1R1w3r6BU59Srwb8wjZrEVA6bugePVugGUf5Tvwc0yqTdkXXAhb80ngSYEjCsqE01GEV_Rx3L0hhyGTwj/s600/Win06.png"/></a>
<br />
-->
<br />
Start | Run | cmd. Type sdcc --version. The following should display to confirm SDCC version 4.1.0:
<br />
<!--
<a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgOz6Ai5SZ-OyTnfwuu7VSyCkVqO0TuiANAd91iIaAyGlIRjHsOBcEE-zBAJe8YnwRU0zpjwNA4DNGwW5NKdh_beYewbA4ZULW7I4Sli7ba7exD78pyyfxJzhkv_paldvabqbBTS_Ge_5ESD2NEJYLPZPF0Sv_OMZlovCLtdTfUk29BqkMaSgDIphVU/s1111/Win07.png"><img alt="" border="0" width="98%" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgOz6Ai5SZ-OyTnfwuu7VSyCkVqO0TuiANAd91iIaAyGlIRjHsOBcEE-zBAJe8YnwRU0zpjwNA4DNGwW5NKdh_beYewbA4ZULW7I4Sli7ba7exD78pyyfxJzhkv_paldvabqbBTS_Ge_5ESD2NEJYLPZPF0Sv_OMZlovCLtdTfUk29BqkMaSgDIphVU/s600/Win07.png"/></a>
<br />
-->
<br />
  
<b>Linux</b><br />
Download and extract <a href="https://sourceforge.net/projects/sdcc/files/sdcc-linux-amd64/4.1.0/sdcc-4.1.0-amd64-unknown-linux2.5.tar.bz2/download">sdcc-4.1.0-</a>amd64-unknown-linux2.5.tar.bz2 to ~/sdcc.  This should install all features.
<br />
<!--
<a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgl_I59OuU2qA1Iy7yr1DaBPntXqoeiYvlSz2Rx3laGr_jFOp7PKisSdjZkNK-s5yljCMXKa9VgH36H6AAkkdRD2txOL7kRr-DPhwDgrZ7csckFLof4syuXvjmzm_L4mCQ1FcT4CVgRyPbM91KFoa5NP_PRXgBGNbMg4KuUNreK0jXHNwpNXR5eNflz/s600/Lin05.png"><img alt="" border="0" width="98%" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgl_I59OuU2qA1Iy7yr1DaBPntXqoeiYvlSz2Rx3laGr_jFOp7PKisSdjZkNK-s5yljCMXKa9VgH36H6AAkkdRD2txOL7kRr-DPhwDgrZ7csckFLof4syuXvjmzm_L4mCQ1FcT4CVgRyPbM91KFoa5NP_PRXgBGNbMg4KuUNreK0jXHNwpNXR5eNflz/s600/Lin05.png"/></a>
<br />
-->
<br />
There should be no extra configuration except add $HOME/sdcc/bin to the ~/.bashrc file so always available.
<br />
<!--
<table width="100%" border="1">
<tr>
<td valign="top">
&nbsp;gedit ~/.bashrc
<br />
&nbsp;export PATH="$PATH:$HOME/sdcc/bin"
</td>
</tr>
</table>
-->  
<br />
Launch Terminal. Type sdcc --version [sdcc -v]. The following should display to confirm SDCC version 4.1.0:
<br />
<!--
<a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj52LS-l9Is_zr73tpLXKr7Npbzr0eEuE7j1KnpfXhflSSxE9CMAGz51g6iZKUW6CEIP5f4xxSPG75XKudDT8ITQAtaAlGYP5dKR9PQZ2iQ6S5-WKqGCc3UmuUDfA_EjdE_PY2LNsYb_WJzhQN_xRrPctVk_J8tmGKg-R7vU4CO2bFViNN4dO_GqbvS/s889/Lin07.png"><img alt="" border="0" width="98%" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj52LS-l9Is_zr73tpLXKr7Npbzr0eEuE7j1KnpfXhflSSxE9CMAGz51g6iZKUW6CEIP5f4xxSPG75XKudDT8ITQAtaAlGYP5dKR9PQZ2iQ6S5-WKqGCc3UmuUDfA_EjdE_PY2LNsYb_WJzhQN_xRrPctVk_J8tmGKg-R7vU4CO2bFViNN4dO_GqbvS/s600/Lin07.png"/></a>
<br />
-->
<br />

  <u>Directories</u><br />
<table width="100%" border="1">
<tr>
<td valign="top">&nbsp;Windows</td>
<td valign="top">&nbsp;%INSTALLATION%\SDCC\bin
</td>
</tr>
<tr>
<td valign="top">&nbsp;Linux</td>
<td valign="top">&nbsp;%INSTALLATION%/SDCC/bin
</td>
</tr>
</table>
<br />

<b>devkitSMS</b><br />
Navigate to the <a href="https://github.com/sverx/devkitSMS">devkitSMS</a> repository on github.  <a href="https://twitter.com/i_am_sverx">@sverx</a> has full instructions <a href="https://github.com/sverx/devkitSMS/blob/master/README.md">here</a> and advises to copy the following 4x executables into SDCC bin folder: assets2banks.exe, folder2c.exe, ihx2sms.exe, makesms.exe.
<br />
<!--
<pre class="csharp" name="code">
# Clone devkitSMS
git clone https://github.com/sverx/devkitSMS.git

# Copy 4x files
cd devkitSMS
copy assets2banks/assets2banks.exe %INSTALLATION/SDCC/bin
copy folder2c/folder2c.exe %INSTALLATION/SDCC/bin
copy ihx2sms/ihx2sms.exe %INSTALLATION%/SDCC/bin
copy folder2c/makesms.exe %INSTALLATION/SDCC/bin
</pre>
-->
<br />
Note: my preference is to usually copy the relevant files up-to-date as each Master System project is built.
<br /><br />
  
<br /><br />

  
</span>