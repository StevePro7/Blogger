<span style="font-family:verdana;font-size:85%;">
In the previous <a href="http://steveproxna.blogspot.com/2019/09/linux-setup-cheat-sheet.html">post</a>, we set up Ubuntu Linux on Windows and Mac OS/X using VirtualBox.  Now we focus our set up on dedicated Ubuntu Linux workstation or Windows PC that has dual boot with Ubuntu Linux installed.
<br />
<a href="https://3.bp.blogspot.com/-tOvmPTWg5LA/XUfplik_HaI/AAAAAAAAFlo/twAFdZ83mtAOkqpWHdvSfPRlKZNc4E7OACLcBGAs/s1600/Linux.jpg" imageanchor="1" ><img border="0" src="https://3.bp.blogspot.com/-tOvmPTWg5LA/XUfplik_HaI/AAAAAAAAFlo/twAFdZ83mtAOkqpWHdvSfPRlKZNc4E7OACLcBGAs/s640/Linux.jpg" width="98%" height="225" /></a>
<br />
Let's check it out!
<br /><br />
<b>Account</b><br />
Typically, during the installation process, an admin account is prompted to be created with username and password.  However, follow these instructions to <a href="https://www.cyberciti.biz/faq/add-new-user-account-with-admin-access-on-linux">add</a> new user account with admin access on Ubuntu Linux.
<br />
<table width="97%" border="1">
<tr>
<td valign="top">
&nbsp;adduser stevepro<br />
&nbsp;usermod -aG sudo stevepro<br />
&nbsp;id stevepro<br />
&nbsp;su - stevepro<br />
</td>
</tr>  
</table>
<br />
Alternatively, <a href="https://help.ubuntu.com/stable/ubuntu-help/user-accounts.html.en#manage">manage</a> user accounts from Settings | Users user interface to <a href="https://help.ubuntu.com/stable/ubuntu-help/user-add.html.en">add</a> new user account.  Initially, the account user will use the default icon.  Consider changing via Settings | Users | Picture | Select File.
<br /><br />
<b>Login</b><br />
If, whenever you attempt to login, you get the Ubuntu black screen with flashing cursor then attempt this <a href="https://www.youtube.com/watch?v=UjGy2-y-fzs">fix</a>:  Reboot computer and login as <a href="https://askubuntu.com/questions/859630/how-to-start-ubuntu-in-console-mode">recovery</a> mode.  Once logged in again, download and install NVIDIA.run.
<br /><br>
Checkout <a href="https://linuxconfig.org/how-to-install-the-nvidia-drivers-on-ubuntu-20-04-focal-fossa-linux">here</a> and <a href="https://www.cyberciti.biz/faq/ubuntu-linux-install-nvidia-driver-latest-proprietary-driver">here</a> how to <a href="https://download.nvidia.com/XFree86/Linux-x86_64/460.84/NVIDIA-Linux-x86_64-460.84.run">install</a> nVidia driver on Ubuntu Linux e.g. NVIDIA-Linux-x86_64-460.84.run
<br>
<table width="98%" border="1">
<tr>
<td valign="top">
&nbsp;sudo su<br />
&nbsp;cd Downloads<br />
&nbsp;./NVIDIA.run<br />
</td>
</tr>  
</table>
<br />
IMPORTANT<br />
If you are running X server then you may get an <a href="https://askubuntu.com/questions/149206/how-to-install-nvidia-run">error</a> when trying to install NVIDIA.run while still logged in:
<br />
<table width="98%" border="1">
<tr>
<td valign="top">
&nbsp;<b>Ensure you are logged out!</b><br />
&nbsp;sudo service lightdm stop<br />
&nbsp;sudo init 3<br />
&nbsp;./NVIDIA...run<br />
&nbsp;sudo service lightdm start<br />
</td>
</tr>  
</table>
<br />
In, Software Updater | Additional Drivers, ensure NVidia is set "Using X.Org X server" as alternative driver.
<br />
<a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgY3hoR5qokDKwCTU248HJCN1EPKtY_3yra6j6zKJNenBH03bJXR-hS69J94JI25kQys1vlsE_6cUo3sAsWYlpeOqKQPk642-xICEsdV8Fqb4KkTl1S8dJWwdrVj4IYNEd1Zy-QngiNyPPfHgSCsIOwCgfd5IV9tTfYKcXMu0CSzLaYPEaHgJU3tA6a/s992/nvidia-driver.png"><img alt="" border="0" width="98%"
src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgY3hoR5qokDKwCTU248HJCN1EPKtY_3yra6j6zKJNenBH03bJXR-hS69J94JI25kQys1vlsE_6cUo3sAsWYlpeOqKQPk642-xICEsdV8Fqb4KkTl1S8dJWwdrVj4IYNEd1Zy-QngiNyPPfHgSCsIOwCgfd5IV9tTfYKcXMu0CSzLaYPEaHgJU3tA6a/s600/nvidia-driver.png"/></a>
<br /><br />
<b>Graphics</b><br />
Initially, video file formats like mp4 may result in black screen.  If so then install all the <a href="https://linuxhint.com/install_multimedia_codecs_ubuntu">Multimedia</a> Codecs:
<br />
<table width="98%" border="1">
<tr>
<td valign="top">
&nbsp;sudo apt-get update<br />
&nbsp;sudo apt install ubuntu-restricted-extras<br />
</td>
</tr>  
</table>
<br />
<b>Ubuntu</b><br />
Confirm the version of Ubuntu Linux installed on terminal with <b>lsb_release -a</b>.  Upgrade now accordingly:
<br />
<table width="97%" border="1">
<tr>
<td valign="top">
&nbsp;sudo apt update && sudo apt upgrade<br />
&nbsp;sudo reboot command<br />
&nbsp;sudo apt install update-manager-core<br />
&nbsp;sudo do-release-upgrade<br />
&nbsp;sudo reboot<br />
&nbsp;lsb_release -a<br />
</td>
</tr>  
</table>
<br />
<b>Kernel</b><br />
<a href="https://ubuntuhandbook.org/index.php/2020/08/mainline-install-latest-kernel-ubuntu-linux-mint">Mainline</a> is graphical tool to install the latest mainline kernel in Ubuntu Linux.  Install Mainline from Terminal:
<br>
<table width="98%" border="1">
<tr>
<td valign="top">
&nbsp;sudo add-apt-repository ppa:cappelikan/ppa<br />
&nbsp;sudo apt update<br />
&nbsp;sudo apt install mainline<br />  
&nbsp;mainline --check<br />  
&nbsp;mainline --list<br />
</td>
</tr>  
</table>
Start | Ubuntu Mainline.  From the User Interface now install / uninstall Ubuntu Linux versions seemlessly.  Once Ubuntu Linux kernel has been updated confirm kernel new version with <b>uname -r</b>.
<br><br>
<b>Diff Tools</b><br />
On Windows PC, Tortoise Merge is handy tool to compare 2x files whereas WinMerge is handy tool that can compare 2x directories.  Meld + KDiff3 are <a href="https://alternativeto.net/software/winmerge/?platform=linux">alternatives</a> for Linux both installed from Ubuntu Software Center.
<br /><br />
<i>Meld</i><br>
File | New Comparison.  File comparison navigate to file 1.  Directory comparison navigate to file 2.  Compare.  
<br /><br />
<i>KDiff3</i><br>
Similar to WinMerge: A. Directory navigate to directory 1.  B. Directory navigate to directory 2.  Compare OK.
<br /><br />
<b>Disk Space</b><br />  
Use Ubuntu Linux Disk Analyzer utility to <a href="https://itsfoss.com/fix-empty-trash-ubuntu">identify</a> common locations which can be used to free up disk space:
<br />
<table width="99%" border="1">
<tr>
<td valign="top">
&nbsp;rm -rf ~/.local/share/Trash/*<br />
&nbsp;du -sh ~/.cache/thumbnails<br />
&nbsp;sudo du -h /var/lib/snapd/snaps<br />
&nbsp;sudo du -sh /var/cache/apt <br />
</td>
<td valign="top">
&nbsp;sudo apt-get autoclean<br />
&nbsp;sudo apt-get clean<br />
&nbsp;sudo journalctl --disk-usage<br />
&nbsp;sudo journalctl --vacuum-time=3d <br />
</td>
</tr>  
</table>
Other utilities to identify excess storage include <b>ncud</b> and <b>bleachbit</b> both which can be sudo apt install[ed].
<br /><br />
<b>Find</b><br />
Here are some simple but effective uses of the find command e.g. <a href="https://stackoverflow.com/questions/4767396/linux-command-how-to-find-only-text-files">find</a> all text in file that follows predicate:
<br />
<table width="97%" border="1">
<tr>
<td valign="top">
&nbsp;find -L . -type f -exec grep -HniI 'g++' {} \; > ~/Steven/gpp.txt<br />
</td>
</tr>  
</table>
<br />
Another useful example is how to <a href="https://stackoverflow.com/questions/1842254/how-can-i-find-all-of-the-distinct-file-extensions-in-a-folder-hierarchy">find</a> all of the distinct file extensions in a particular folder hierarchy:
<br />
<table width="97%" border="1">
<tr>
<td valign="top">
&nbsp;find . -type f | perl -ne 'print $1 if m/\.([^.\/]+)$/' | sort -u<br />
</td>
</tr>  
</table>
<br />
<b>Shortcuts</b><br />
<table width="99%" border="1">
<tr>
<td valign="top">&nbsp;General</td>
<td valign="top">&nbsp;Minimize all windows</td>  
<td valign="top">&nbsp;Ctrl + Alt + D</td>
</tr>
<tr>
<td valign="top">&nbsp;gedit</td>
<td valign="top">&nbsp;Move prev tab</td>  
<td valign="top">&nbsp;Ctrl + Alt + PgUp</td>
</tr>
<tr>
<td valign="top">&nbsp;gedit</td>
<td valign="top">&nbsp;Move next tab</td>  
<td valign="top">&nbsp;Ctrl + Alt + PgDown</td>
</tr>
</table>
<br />
<b>SSH</b><br />
Secure SHell [SSH] may not be enabled after Ubuntu Linux is installed.  Therefore you may get the following:
<br>
<table width="98%" border="1">
<tr>
<td valign="top">
&nbsp;ssh stevepro@192.168.15.50<br />
&nbsp;ssh: connect to host 192.168.15.50 port 22: Connection refused<br />  
</td>
</tr>  
</table>
<br>
<i>Server</i><br>
<a href="https://linuxhint.com/fix_connection_refused_ubuntu">Here</a> is how to fix the Connection refused issue on port 22.  On the destination server set up the following:
<br>
<table width="98%" border="1">
<tr>
<td valign="top">
&nbsp;# Make sure OpenSSH is installed<br />
&nbsp;# Install SSH<br />
&nbsp;# Check SSH service<br />
&nbsp;# Start SSH service<br />
</td>
<td valign="top">
&nbsp;sudo apt list --installed | grep openssh-server<br />
&nbsp;sudo apt install openssh-server<br />
&nbsp;sudo service ssh status<br>
&nbsp;sudo service ssh start<br>
</td>
</tr>  
</table>
<br>
<i>Client</i><br>
On source client connect to Files | Other Locations | Connect to Server <b>sftp://stevepro@192.168.15.50</b>.
<br />  
Also, <b>ssh stevepro@192.168.15.50</b> should now work!
<br /><br />
<b>Mouse Scroll</b><br />  
After setting up new blue tooth mouse the default scroll was too slow.  Therefore, install and set up <a href="https://io.bikegremlin.com/11541/linux-mouse-scroll-speed/">lmwheel</a>:
<br />
<table width="99%" border="1">
<tr>
<td valign="top">
&nbsp;sudo apt-get install imwheel<br />
</td>
</tr>  
</table>
<br />
Create mouse.sh.  Integrate the following shell script.  Set execute permissions.  Configure using <b>./mouse.sh</b>.
<br />
<pre class="csharp" name="code">
#!/bin/bash
if [ ! -f ~/.imwheelrc ]
then
cat &gt;~/.imwheelrc&lt;&lt;EOF
".*"
None,      Up,   Button4, 1
None,      Down, Button5, 1
Control_L, Up,   Control_L|Button4
Control_L, Down, Control_L|Button5
Shift_L,   Up,   Shift_L|Button4
Shift_L,   Down, Shift_L|Button5
EOF
fi
CURRENT_VALUE=$(awk -F 'Button4,' '{print $2}' ~/.imwheelrc)
NEW_VALUE=$(zenity --scale --window-icon=info --ok-label=Apply --title="Wheelies" --text "Mouse wheel speed:" --min-value=1 --max-value=100 --value="$CURRENT_VALUE" --step 1)
if [ "$NEW_VALUE" == "" ];
then exit 0
fi
sed -i "s/\($TARGET_KEY *Button4, *\).*/\1$NEW_VALUE/" ~/.imwheelrc # find the string Button4, and write new value.
sed -i "s/\($TARGET_KEY *Button5, *\).*/\1$NEW_VALUE/" ~/.imwheelrc # find the string Button5, and write new value.
cat ~/.imwheelrc
imwheel -kill
</pre>  
<br />
<b>VNC Viewer</b><br />
If you are transitioning from Windows to Linux you may like to remote desktop from Windows to Linux box.
<br /><br />
<i>Linux</i><br />
Follow all <a href="https://www.youtube.com/watch?v=bLGLwGToFCg">instructions</a>.  Change Ubuntu desktop manager from GNOME to LightDM.  <a href="https://www.crazy-logic.co.uk/projects/computing/how-to-install-x11vnc-vnc-server-as-a-service-on-ubuntu-20-04-for-remote-access-or-screen-sharing">Install</a> X11VNC as service on Ubuntu.  Launch Terminal and enter the following.  When prompted, ensure you choose lightdm not gdm3:
<pre class="csharp" name="code">
sudo apt-get update
sudo apt-get install lightdm
sudo reboot
sudo apt-get install x11vnc
</pre>
<br />
After installing LightDM, rebooting and installing X11VNC, configure x11vnc.service.  Replace your password!
<pre class="csharp" name="code">
sudo gedit /lib/systemd/system/x11vnc.service

[Unit]
Description=x11vnc service
After=display-manager.service network.target syslog.target

[Service]
Type=simple
ExecStart=/usr/bin/x11vnc -forever -display :0 -auth guess -passwd REPLACE_WITH_YOUR_LOGIN_PASSWORD
ExecStop=/usr/bin/killall x11vnc
Restart=on-failure

[Install]
WantedBy=multi-user.target
</pre>
<br />
Finally, after configuring x11vnc.service, enter the following commands to complete the VNC Viewer setup.
<pre class="csharp" name="code">
systemctl daemon-reload
systemctl enable x11vnc.service
systemctl start x11vnc.service

systemctl status x11vnc.service
ip addr | grep 192                        # NOTE the IP address 192.168.1.X
</pre>
<br />
IMPORTANT<br />
Don't lock the screen as you won't be able to VNC back in!  Change Settings | Privacy | Screen Lock to this:  
<br />
<a href="https://1.bp.blogspot.com/-Rn8mo4N3krQ/YPGpZhGfXHI/AAAAAAAAHG0/ncOX0364UtkIKeskQAmcnP95o8xxyXFWgCLcBGAsYHQ/s661/vnc-screenlock.png"><img alt="" border="0" width="98%" src="https://1.bp.blogspot.com/-Rn8mo4N3krQ/YPGpZhGfXHI/AAAAAAAAHG0/ncOX0364UtkIKeskQAmcnP95o8xxyXFWgCLcBGAsYHQ/s600/vnc-screenlock.png"/></a>
<i>Windows</i><br />
<a href="https://www.realvnc.com/en/connect/download/viewer">Download</a> and install VNC Viewer.  Launch VNC Viewer.  Setup Team.  Choose File | New Connection.  Enter the IP address from above on port 5000 for VNC Server e.g. 192.168.1.X:5900.  Enter friendly name + Connect.
<br />
<a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEidZ71sigm3Hk48l52_h2DNAObfz9tq0qW2l1WU7yMIIE61UWtDqcCNoYHq52IZaqeuzjm1j6WCaDrP5s_DSvOvjfrae-3dJf2CMCERc2GNO-u4dNz_F3DC_BiYmdYgv9LnTpcw3vM6MTiPBrgfvcKsrKic3lF9VQO47vwiZ-ZuPtbkmlI46XSQ_AjD/s421/vnc-windows.png"><img alt="" border="0" width="98%" height="300" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEidZ71sigm3Hk48l52_h2DNAObfz9tq0qW2l1WU7yMIIE61UWtDqcCNoYHq52IZaqeuzjm1j6WCaDrP5s_DSvOvjfrae-3dJf2CMCERc2GNO-u4dNz_F3DC_BiYmdYgv9LnTpcw3vM6MTiPBrgfvcKsrKic3lF9VQO47vwiZ-ZuPtbkmlI46XSQ_AjD/s600/vnc-windows.png"/></a>
<br />
When prompted choose Continue.  Enter password | Check Remember password.  Unfortunately not all keys may work e.g. Caps Lock.  Also, you may have to disable and re-enable Repeat Keys from Universal Access.
<br /><br />
<u>Summary</u><br />
Now we have a dedicated Ubuntu Linux workstation set up we are all set for cloud computing development!
</span>