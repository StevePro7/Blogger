<span style="font-family:verdana;font-size:85%;">
  

  
<br /> 
In the previous <a href="http://steveproxna.blogspot.com/2019/09/linux-setup-cheat-sheet.html">post</a>, we set up Ubuntu Linux on Windows and Mac OS/X using VirtualBox.  Now we focus our set up on dedicated Ubuntu Linux workstation or Windows PC that has dual boot with Ubuntu Linux installed.
<br />
<!--  
  <a href="https://3.bp.blogspot.com/-tOvmPTWg5LA/XUfplik_HaI/AAAAAAAAFlo/twAFdZ83mtAOkqpWHdvSfPRlKZNc4E7OACLcBGAs/s1600/Linux.jpg" imageanchor="1" ><img border="0" src="https://3.bp.blogspot.com/-tOvmPTWg5LA/XUfplik_HaI/AAAAAAAAFlo/twAFdZ83mtAOkqpWHdvSfPRlKZNc4E7OACLcBGAs/s640/Linux.jpg" width="98%" height="225" /></a>
-->
<br />
Let's check it out!
<br /><br />

<b>Account</b><br />
Typically, during the installation process, an admin account is prompted to be created with username and password.  However, follow these instructions to <a href="https://www.cyberciti.biz/faq/add-new-user-account-with-admin-access-on-linux">add</a> new user account with admin access on Ubuntu Linux.
<br />
  <table width="97%" border="1">
    <tr>
      <td valign="top">
        &nbsp;adduser stevepro<br />
        &nbsp;usermod -aG sudo stevepro<br />
        &nbsp;id stevepro<br />
        &nbsp;su - stevepro<br />
      </td>
    </tr>  
  </table>
<br />
Alternatively, <a href="https://help.ubuntu.com/stable/ubuntu-help/user-accounts.html.en#manage">manage</a> user accounts from Settings | Users user interface to <a href="https://help.ubuntu.com/stable/ubuntu-help/user-add.html.en">add</a> new user account.  Initially, the account user will use the default icon.  Consider changing via Settings | Users | Picture | Select File.
<br /><br />

<b>Login</b><br />
TODO - black screen of death
<br /><br />

<b>Ubuntu</b><br />
Confirm the version of Ubuntu Linux installed on terminal with <b>lsb_release -a</b>.  Upgrade now accordingly:
<br />
  <table width="97%" border="1">
    <tr>
      <td valign="top">
        &nbsp;sudo apt update && sudo apt upgrade<br />
        &nbsp;sudo reboot command<br />
        &nbsp;sudo apt install update-manager-core<br />
        &nbsp;sudo do-release-upgrade<br />
        &nbsp;sudo reboot<br />
        &nbsp;lsb_release -a<br />
      </td>
    </tr>  
  </table>
  <br />

<b>Kernel</b><br />
<a href="https://ubuntuhandbook.org/index.php/2020/08/mainline-install-latest-kernel-ubuntu-linux-mint">Mainline</a> is graphical tool to install the latest mainline kernel in Ubuntu Linux.  Install Mainline from Terminal:
  <br>
  <table width="98%" border="1">
    <tr>
      <td valign="top">
        &nbsp;sudo add-apt-repository ppa:cappelikan/ppa<br />
        &nbsp;sudo apt update<br />
        &nbsp;sudo apt install mainline<br />  
        &nbsp;mainline --check<br />  
        &nbsp;mainline --list<br />
      </td>
    </tr>  
  </table>
Start | Ubuntu Mainline.  From the User Interface now install / uninstall Ubuntu Linux versions seemlessly.  Once Ubuntu Linux kernel has been updated confirm kernel new version with <b>uname -r</b>.
  <br><br>

<b>SSH</b><br />
Secure SHell [SSH] may not be enabled after Ubuntu Linux is installed.  Therefore you may get the following:
  <br>
  <table width="98%" border="1">
    <tr>
      <td valign="top">
        &nbsp;ssh stevepro@192.168.15.50<br />
        &nbsp;ssh: connect to host 192.168.15.50 port 22: Connection refused<br />  
      </td>
    </tr>  
  </table>
  <br>
<U>SERVER</U><br>
Here is how to fix the Connection refused issue on port 22.  On the destination server set up the following:
<table width="98%" border="1">
    <tr>
      <td valign="top">
        &nbsp;# Make sure OpenSSH is installed<br />
        &nbsp;# Install SSH<br />
        &nbsp;# Check SSH service<br />
        &nbsp;# Start SSH service<br />
      </td>
      <td valign="top">
        &nbsp;sudo apt list --installed | grep openssh-server<br />
        &nbsp;sudo apt install openssh-server<br />
        &nbsp;sudo service ssh status<br>
        &nbsp;sudo service ssh start<br>
      </td>
    </tr>  
  </table>
  <br />
<U>CLIENT</U><br>
On source client connect to Files | Other Locations | Connect to Server <b>sftp://stevepro@192.168.15.50</b>.
<br />  
Also, <b>ssh stevepro@192.168.15.50</b> should now work!
<br /><br />
  
<b>Find</b><br />
  Here are some simple but effective uses of the find command e.g. <a href="https://stackoverflow.com/questions/4767396/linux-command-how-to-find-only-text-files">find</a> all text in file that follows predicate:
<br />
  <table width="97%" border="1">
    <tr>
      <td valign="top">
        &nbsp;find -L . -type f -exec grep -HniI 'g++' {} \; > ~/Steven/gpp.txt<br />
      </td>
    </tr>  
  </table>
<br />
Another useful example is how to <a href="https://stackoverflow.com/questions/1842254/how-can-i-find-all-of-the-distinct-file-extensions-in-a-folder-hierarchy">find</a> all of the distinct file extensions in a particular folder hierarchy:
  <br />
  <table width="97%" border="1">
    <tr>
      <td valign="top">
        &nbsp;find . -type f | perl -ne 'print $1 if m/\.([^.\/]+)$/' | sort -u<br />
      </td>
    </tr>  
  </table>
<br />

<b>Diff Tools</b><br />
On Windows PC, Tortoise Merge is handy tool to compare 2x files whereas WinMerge is handy tool that can compare 2x directories.  Meld + KDiff3 are alternatives for Linux both installed from Ubuntu Software Center.
<br /><br />
<u>Meld</u><br>
File | New Comparison.  File comparison navigate to file 1.  Directory comparison navigate to file 2.  Compare.  
<br /><br />
<u>KDiff3</u><br>
Similar to WinMerge: A. Directory navigate to directory 1.  B. Directory navigate to directory 2.  Compare OK.
<br /><br />

<b>Shortcuts</b><br />
<table width="99%" border="1">
<tr>
<td valign="top">&nbsp;General</td>
<td valign="top">&nbsp;Minimize all windows</td>  
<td valign="top">&nbsp;Ctrl + Alt + D</td>
</tr>
<tr>
<td valign="top">&nbsp;gedit</td>
<td valign="top">&nbsp;Move prev tab</td>  
<td valign="top">&nbsp;Ctrl + Alt + PgUp</td>
</tr>
<tr>
<td valign="top">&nbsp;gedit</td>
<td valign="top">&nbsp;Move next tab</td>  
<td valign="top">&nbsp;Ctrl + Alt + PgDown</td>
</tr>
</table>
<br />

<b>Mouse Scroll</b><br />  
After setting up new blue tooth mouse the default scroll was too slow.  Therefore, install and set up <a href="https://io.bikegremlin.com/11541/linux-mouse-scroll-speed/">lmwheel</a>:
<br />
  <table width="99%" border="1">
    <tr>
      <td valign="top">
        &nbsp;sudo apt-get install imwheel<br />
      </td>
    </tr>  
  </table>
<br />
Create mouse.sh.  Integrate the following shell script.  Set execute permissions.  Configure using <b>./mouse.sh</b>.
<br />
<pre class="csharp" name="code">
#!/bin/bash
if [ ! -f ~/.imwheelrc ]
then
cat &gt;~/.imwheelrc&lt;&lt;EOF
".*"
None,      Up,   Button4, 1
None,      Down, Button5, 1
Control_L, Up,   Control_L|Button4
Control_L, Down, Control_L|Button5
Shift_L,   Up,   Shift_L|Button4
Shift_L,   Down, Shift_L|Button5
EOF
fi
CURRENT_VALUE=$(awk -F 'Button4,' '{print $2}' ~/.imwheelrc)
NEW_VALUE=$(zenity --scale --window-icon=info --ok-label=Apply --title="Wheelies" --text "Mouse wheel speed:" --min-value=1 --max-value=100 --value="$CURRENT_VALUE" --step 1)
if [ "$NEW_VALUE" == "" ];
then exit 0
fi
sed -i "s/\($TARGET_KEY *Button4, *\).*/\1$NEW_VALUE/" ~/.imwheelrc # find the string Button4, and write new value.
sed -i "s/\($TARGET_KEY *Button5, *\).*/\1$NEW_VALUE/" ~/.imwheelrc # find the string Button5, and write new value.
cat ~/.imwheelrc
imwheel -kill
</pre>  
<br />
</span>
