<span style="font-family:verdana;font-size:85%;">

<u>Cluster</u><br />
Extend example but this time include Gitlab CI/CD deployment pipelines.  Ensure you have all Pre-Requisites:
<br />
<!--
<table width="100%" border="1">
<tr>
<td>
&nbsp;Python 3.8<br />
&nbsp;<a href="https://gitlab.com/SteveProXNA">GitLab</a> account [CI/CD]<br />
&nbsp;Microsoft <a href="https://portal.azure.com">Azur</a>e subscription [AZ CLI]<br />
&nbsp;VS Code Docker + Kubernetes <br />
</td>
<td>
&nbsp;<a href="https://hub.docker.com/u/steveproxna">Docker</a> Hub account<br />
&nbsp;Kubernetes in Docker [KinD]<br />
&nbsp;docker [CLI]<br />
&nbsp;kubectl [CLI]<br />
</td>
</tr>
</table>
<br />
-->
<br />
  
<b>Azure AKS</b><br />
Launch Terminal | Login to Azure portal.  Enter commands to extract Service Principal and generate SSH key:
<br />
<!--
<table border="1" width="99%">
<tr>
<td valign="top">
&nbsp;az login<br />
&nbsp;az ad sp create-for-rbac --name ${USER}-bz-sp<br />
&nbsp;cd ~/.ssh<br />
</td>
<td>
&nbsp;ssh-keygen -t rsa -b 4096 -N '' -f master_ssh_key<br />
&nbsp;eval $(ssh-agent -s)<br />
&nbsp;ssh-add master_ssh_key<br />
</td>
</tr>
</table>
-->
<br />
Export the following environment variables.  Note: use the Service Principal information for first 3x ENV VARs
<br />
<!--
<table width="100%" border="1">
<tr>
<td>
&nbsp;export AZ_SP_ID=&lt;value_from_appId&gt;<br />
&nbsp;export AZ_SP_PASSWORD=&lt;value_from_password&gt;<br />
&nbsp;export AZ_TENANT_ID=&lt;value_from_tenant<br />
&nbsp;export CLUSTER_NAME=stevepro-dev-cluster<br />
&nbsp;export CLUSTER_NODES=3<br />
&nbsp;export MASTER_SSH_KEY=~/.ssh/master_ssh_key.pub<br />
</td>
<td>
&nbsp;export AZ_NETWORK_MODE=transparent<br />
&nbsp;export AZ_CREATE_MODE=AKS<br />
&nbsp;export AZ_LB_SKU=standard<br />
&nbsp;export AZ_VM_SIZE=Standard_D2s_v3<br />
&nbsp;export AZ_LOCATION=northeurope<br />
&nbsp;export KUBERNETES_VERSION=1.28<br />
</td>
</tr>
</table>
-->
<br />
Create the Azure resource group then finally create the AKS cluster.  Note: this process can take few minutes
<br />
<!--
<table border="1" width="99%">
<tr>
<td valign="top">
&nbsp;az group create --name ${CLUSTER_NAME} --location ${AZ_LOCATION} --debug
</td>
</tr>
<tr>
<td valign="top">
&nbsp;az aks create --name ${CLUSTER_NAME} --resource-group ${CLUSTER_NAME} \<br />
&nbsp; --dns-name-prefix ${CLUSTER_NAME} --node-count ${CLUSTER_NODES} \<br />
&nbsp; --node-vm-size ${AZ_VM_SIZE} --kubernetes-version ${KUBERNETES_VERSION} \<br />
&nbsp; --ssh-key-value ${MASTER_SSH_KEY} --service-principal ${AZ_SP_ID} \<br />
&nbsp; --client-secret ${AZ_SP_PASSWORD} --load-balancer-sku ${AZ_LB_SKU} \<br />
&nbsp; --network-plugin azure --debug<br />
</td>
</tr>
</table>
<br />
Finally, execute following commands to download + export <b>KUBECONFIG</b> file on localhost and setup context
<br />
<table border="1" width="99%">
<tr>
<td valign="top">
&nbsp;export KUBECONFIG=~/.kube/config<br />
&nbsp;az aks get-credentials --name ${CLUSTER_NAME} \<br />
&nbsp; --resource-group ${CLUSTER_NAME} --file ${KUBECONFIG}<br />
&nbsp;kubectl create ns test-ns<br />
&nbsp;kubectl config set-context --current --namespace=test-ns<br />
</td>
</tr>
</table>
-->
<br />
  
<b>Pipeline</b><br />
Follow this <a href="https://docs.gitlab.com/ee/ci/quick_start">tutorial</a> to create and run your first GitLab CI/CD pipeline.  Create <b><a href="https://gitlab.com/SteveProXNA/gitlabcheatsheet/-/blob/main/.gitlab-ci.yml">.gitlab-ci.yml</a></b> file at root the of the project directory.  Refactor all YAML configuration in files beneath the <b><a href="https://gitlab.com/SteveProXNA/gitlabcheatsheet/-/tree/main/cicd">cicd</a></b> directory.  <a href="https://robinjanke1.medium.com/automating-helm-chart-builds-and-deployment-with-gitlab-ci-cd-2dbfad30a86c">Automate</a> CI/CD to the Kubernetes cluster using <b><a href="https://gitlab.com/SteveProXNA/gitlabcheatsheet/-/tree/main/helm">helm</a></b> charts.  This way, multiple environments can be targeted and customized.
<br /><br />

<b>Variables</b><br />
Navigate to <a href="https://gitlab.com/SteveProXNA/gitlabcheatsheet/-/settings/ci_cd">gitlab.com</a> | Settings | CI/CD | Variables.  Enter all GitLab <a href="https://docs.gitlab.com/ee/ci/variables/predefined_variables.html ">Variables</a> here e.g. Docker registry host and username.  <a href="https://cloudifydevops.com/secured-gitlab-pipeline-with-base64">Secure</a> sensitive information like Docker password using Base64.  Add <b>KUBECONFIG</b>:
<br />
<a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjTGUUUNMTyMV4kq_Y2SJizIsd4oE-xkATtYVeR1h16opxVtVz-CJ_rLS0mj8LNe9TX1Zqd8myjR4jUUx5Hl3KHWWig2-ZZVdqiGu7JQ5sZ8ANp8nk7z17VcVTzLAGpPNvICDI8gf2nWsj7Xs45v-uA3beTPlmhyphenhyphenf7EsOpEybKGswa358EKVViAR57vR60/s883/CICDvariables.png"><img alt="" border="0" width="98%" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjTGUUUNMTyMV4kq_Y2SJizIsd4oE-xkATtYVeR1h16opxVtVz-CJ_rLS0mj8LNe9TX1Zqd8myjR4jUUx5Hl3KHWWig2-ZZVdqiGu7JQ5sZ8ANp8nk7z17VcVTzLAGpPNvICDI8gf2nWsj7Xs45v-uA3beTPlmhyphenhyphenf7EsOpEybKGswa358EKVViAR57vR60/s600/CICDvariables.png"/></a>
<br />

<b>Deployment</b><br />
<a href="https://cto.ai/blog/using-gitlab-ci-cd-with-a-kubernetes-cluster">Trigger</a> CI/CD pipeline.  Launch Terminal | Repeat <i>kubectl port-forward</i>.  Test: curl <b>http://localhost:8080</b>
<br />
<a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgzOSHgEJZVKEX5LG99aT75Fsfyrc_ZD-irkWDCUlImKc5H8oCtaHIolzNPkfi_v94dtfkFeRB1CuKUYrUBeETS6Q2f1h2iijmKjh1NGt5fE8DGbswjweKX2Qko1-Ns0Imhc7778Sdl9u3C5UBdCDgJUVVk0BncozYu85rgFedC5waAdBW5pvOPDodl3_Y/s770/BuildPipelines.png"><img alt="" border="0" width="98%" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgzOSHgEJZVKEX5LG99aT75Fsfyrc_ZD-irkWDCUlImKc5H8oCtaHIolzNPkfi_v94dtfkFeRB1CuKUYrUBeETS6Q2f1h2iijmKjh1NGt5fE8DGbswjweKX2Qko1-Ns0Imhc7778Sdl9u3C5UBdCDgJUVVk0BncozYu85rgFedC5waAdBW5pvOPDodl3_Y/s600/BuildPipelines.png"/></a>
<br />
<table border="1" width="99%">
<tr>
<td valign="top">
&nbsp;kubectl port-forward service/flask-api-service 8080:80<br />
&nbsp;curl http://localhost:8080<br />
</td>
</tr>
</table>
<br />
  
</span>