<span style="font-family:verdana;font-size:85%;">

In 2019, we updated games built using previous versions of MonoGame on Windows that were published on Android and iOS.  This included updating MonoGame content pipeline.  Armed with this knowledge we would now like to assemble 3D graphics and games built on Windows deployed to Android and iOS cross platform.
<br /><br />

<!--
<a href="https://4.bp.blogspot.com/-tYCZkldtDpo/W_PLhz6aiHI/AAAAAAAAFAE/zSJDEyAnbe4QGULpI5_sfa-AH0IKXrCFgCLcBGAs/s1600/MonoGameLogo.png" imageanchor="1" ><img border="0" src="https://4.bp.blogspot.com/-tYCZkldtDpo/W_PLhz6aiHI/AAAAAAAAFAE/zSJDEyAnbe4QGULpI5_sfa-AH0IKXrCFgCLcBGAs/s640/MonoGameLogo.png" width="98%" height="135" data-original-width="218" data-original-height="46" /></a>
-->
<br />
Let's check it out!
<br /><br />

<!--
TL;DR<br />
Too Long; Didn't Read
<ol>
<li></li>
<li></li>
<li></li>
</ol>
-->
<br />
<u>Pre-Requisites</u><br />
Reference previous instructions to setup all pre-requisite software.  This includes Windows, Android and iOS.  Here we will import 3D models and custom shaders all built on Windows then deployed to Android and iOS.
<br /><br />

<u>Windows</u><br />
<pre class="csharp" name="code">
//http://www.monogame.net/documentation/?page=Custom_Effects
#if OPENGL
	#define VS_SHADERMODEL vs_3_0
	#define PS_SHADERMODEL ps_3_0
#else
	#define VS_SHADERMODEL vs_4_0_level_9_1
	#define PS_SHADERMODEL ps_4_0_level_9_1
#endif

technique Technique1
{
    pass Pass1
    {
		VertexShader = compile VS_SHADERMODEL VertexShaderFunction();
		PixelShader = compile PS_SHADERMODEL PixelShaderFunction();
    }
}
</pre> 
</span>