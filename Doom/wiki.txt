<span style="font-family:verdana;font-size:85%;">

<a href="https://en.wikipedia.org/wiki/Doom_(1993_video_game)">Doom</a> is a First-Person Shooter developed and published by <a href="https://en.wikipedia.org/wiki/Id_Software">id Software</a> in December 1993.  Doom is the first franchise installment and one of the most widely <a href="https://en.wikipedia.org/wiki/List_of_Doom_ports">ported</a> video games since the <a href="https://github.com/id-Software/DOOM">code</a> was released Dec-1997.
<br />
<!--
<a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhjg9C-hiIFh3hE02zIcEQ7qCZsmXYiHf_wrOmJ6GnTDaAvstDlx2jBtc2OMvOGt7fWYbGSJF5SZG-tTi8Y7Nfl4ddxPmRsWVaQ4HaVY-WAhyphenhyphen6_0eQj5kBEGAWBMYJ-NvWg5JEnKaCK5jz_QNDUHD5ruY_9jSnu_fjtG02pRdSgIHhRZyIqKeofhP08ahw/s640/Doom1.png"><img alt="" border="0" width="98%"  src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhjg9C-hiIFh3hE02zIcEQ7qCZsmXYiHf_wrOmJ6GnTDaAvstDlx2jBtc2OMvOGt7fWYbGSJF5SZG-tTi8Y7Nfl4ddxPmRsWVaQ4HaVY-WAhyphenhyphen6_0eQj5kBEGAWBMYJ-NvWg5JEnKaCK5jz_QNDUHD5ruY_9jSnu_fjtG02pRdSgIHhRZyIqKeofhP08ahw/s600/Doom1.png"/></a>
-->
<br />
Let's check it out!
<br /><br />
  
<u>Ports</u><br />
In order to better understand the Doom source <a href="https://github.com/id-Software/DOOM">code</a> we would like to debug step thru both the Doom port <a href="https://wiki.archlinux.org/title/PrBoom">PrBoom</a> on Linux and the Doom port <a href="https://github.com/bradharding/doomretro/wiki">DoomRetro</a> on Windows written in <a href="https://en.wikipedia.org/wiki/C_(programming_language)">C</a> using modern-day software tools:
<br />
<!--
<table width="99%" border="1">
<tr>
<td valign="top">&nbsp;<b>Linux</b></td>
<td valign="top">&nbsp;<a href="https://sourceforge.net/projects/prboom-plus/files/prboom-plus/2.5.1.3">PrBoom</a></td>
<td valign="top">&nbsp;Cross-platform version of Doom ported to Linux</td>
</tr>
<tr>
<td valign="top">&nbsp;<b>Windows</b></td>
<td valign="top">&nbsp;<a href="https://github.com/bradharding/doomretro">DoomRetro</a></td>
<td valign="top">&nbsp;Classic refined Doom source port for Windows PC</td>
</tr>
</table>
-->
<br />
  
<u>WAD Files</u></br />
<a href="https://doomwiki.org/wiki/WAD">WAD</a> is the acronym for "Where's All the Data?" which is the file format used by Doom and all Doom engine-based games for storing data.  A WAD file consists of a header, a directory and the data <a href="https://doomwiki.org/wiki/Lump">lumps</a> that make up the resources stored within the file.  A WAD file can be one of two types: an Internal WAD or a Patch WAD:
<br /><br />
<!--
<table width="99%" border="1">
<tr>
<td valign="top">&nbsp;<b><a href="https://doomwiki.org/wiki/IWAD">IWAD</a></b>&nbsp;</td>	
<td valign="top">&nbsp;Internal WAD&nbsp;</td>
<td valign="top">&nbsp;Core WAD file loaded by engine that provides all data required to run game</td>	
</tr>
<tr>
<td valign="top">&nbsp;<b><a href="https://doomwiki.org/wiki/PWAD">PWAD</a></b>&nbsp;</td>	
<td valign="top">&nbsp;Patch WAD&nbsp;</td>
<td valign="top">&nbsp;Optional file that replaces IWAD data and provides additional data to engine</td>	
</tr>
</table>
-->
<!--<br />-->
According to <a href="https://doomwiki.org/wiki/Entryway">doomwiki</a> there is List of <a href="https://doomwiki.org/wiki/List_of_notable_WADs">notable</a> WADs available to download beginning with <a href="https://doomwiki.org/wiki/DOOM1.WAD">Doom1.wad</a> etc.
<br /><br />

<u>Doom Bible</u></br />
The <a href="https://doomwiki.org/wiki/Doom_Bible">Doom Bible</a> is the original design document which includes the specifications for the WAD file format structure that initiated an incredible <a href="https://en.wikipedia.org/wiki/Doom_modding">modding</a> scene in which fans created their own WAD files containing new levels commonplace for first-person shooter games!  Now let's debug step thru Doom <a href="https://en.wikipedia.org/wiki/C_(programming_language)">C</a> source code.
<br /><br />

<u>Summary</u></br />
To summarize, we have now setup Doom ports on both <a href="https://github.com/SteveProXNA/DoomCodeWalkThru/tree/main/Linux">Linux</a> and <a href="https://github.com/SteveProXNA/DoomCodeWalkThru/tree/main/Windows">Windows</a> computers to debug step through and better understand the source code.  While this has been a fun and nostalgic exercise, many believe that this is crucial that Software Developers should <a href="https://embeddedartistry.com/blog/2019/05/06/programmers-lets-study-source-code-classics">review</a> influential source code: rather than repeat the same past mistakes, we should study great works that preceded us and learn from and build upon their lessons.
<br /><br />
Another motivation to study classic video game source code is their relevance to modern day AI topics such as Reinforcement Learning.  For example: <a href="https://github.com/Farama-Foundation/ViZDoom">VizDoom</a> allows developing AI bots to play Doom using only visual information.  Hosted by The <a href="https://farama.org/Announcing-The-Farama-Foundation">Farama</a>, Foundation <a href="https://vizdoom.farama.org/index.html">VizDoom</a> allows creating environments based on the Doom engine.  The library provides Python API wrappers for the Gymnasium / <a href="https://en.wikipedia.org/wiki/OpenAI">OpenAI</a> Gym interface and provides an excellent opportunity to research machine visual learning and deep reinforcement learning in the future!

</span>