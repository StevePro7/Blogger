<u>Summary</u></br />
To summarize, we have now setup Doom ports on both <a href="https://github.com/SteveProXNA/DoomCodeWalkThru/tree/main/Linux">Linux</a> and <a href="https://github.com/SteveProXNA/DoomCodeWalkThru/tree/main/Windows">Windows</a> computers to debug step through and better understand the source code.  While this has been a fun and nostalgic exercise, many believe that this is crucial that Software Developers should <a href="https://embeddedartistry.com/blog/2019/05/06/programmers-lets-study-source-code-classics">review</a> influential source code: rather than repeat the same past mistakes, we should study great works that preceded us and learn from and build upon their lessons.
<br /><br />
Another motivation to study classic video game source code is their relevance to modern day AI topics such as Reinforcement Learning.  For example: <a href="https://github.com/Farama-Foundation/ViZDoom">VizDoom</a> allows developing AI bots to play Doom using only visual information.  Hosted by The <a href="https://farama.org/Announcing-The-Farama-Foundation">Farama</a>, Foundation <a href="https://vizdoom.farama.org/index.html">VizDoom</a> allows creating environments based on the Doom engine.  The library provides Python API wrappers for the Gymnasium / <a href="https://en.wikipedia.org/wiki/OpenAI">OpenAI</a> Gym interface and provides an excellent opportunity to research machine visual learning and deep reinforcement learning in the future!
<br /><br />



It is primarily intended for research in machine visual learning, and deep reinforcement learning, in particular.



https://farama.org/Announcing-The-Farama-Foundation


https://github.com/Farama-Foundation/ViZDoom

https://vizdoom.farama.org/index.html


https://en.wikipedia.org/wiki/OpenAI