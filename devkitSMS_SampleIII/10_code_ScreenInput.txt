<b>Screen</b>
<br />
As projects get larger there will be more screens.  Therefore, refactor and channel through screen manager:
<pre class="csharp" name="code">
// screen_manager.c
#include "screen_manager.h"
#include "global_manager.h"
#include "enum_manager.h"

// Screens
#include "splash_screen.h"
#include "intro_screen.h"
// ...
#include "over_screen.h"

static void( *load_method[ MAX_SCREEENS ] )( );
static void( *update_method[ MAX_SCREEENS ] )( unsigned char *screen_type );

static unsigned char curr_screen_type;
static unsigned char next_screen_type;

void engine_screen_manager_init( unsigned char open_screen_type )
{
	next_screen_type = open_screen_type;
	curr_screen_type = screen_type_none;

	// Set load methods.
	load_method[ screen_type_splash ] = screen_splash_screen_load;
	load_method[ screen_type_intro ] = screen_intro_screen_load;
// ...
}

void engine_screen_manager_update()
{
	if( curr_screen_type != next_screen_type )
	{
		curr_screen_type = next_screen_type;
		load_method[ curr_screen_type ]();
	}

	update_method[ curr_screen_type ]( &next_screen_type );
}
</pre>
<br />
<b>Input</b>
<br />
Remove previous + current input state that was injected into methods and channel through input manager:
<pre class="csharp" name="code">
// input_manager.c
#include "input_manager.h"
#include "_sms_manager.h"

// Must be static to persist values!
static unsigned int curr_joypad1 = 0;
static unsigned int prev_joypad1 = 0;

// Private helper methods.
static unsigned char engine_input_manager_hold( unsigned int data );
static unsigned char engine_input_manager_move( unsigned int data );

// Public method.
void engine_input_manager_update()
{
	prev_joypad1 = curr_joypad1;
	curr_joypad1 = devkit_SMS_getKeysStatus();
}


// main.c
for (;;)
{
	if( devkit_SMS_queryPauseRequested() )
	{
		devkit_SMS_resetPauseRequest();
		global_pause = !global_pause;
		if( global_pause )
		{
			devkit_PSGSilenceChannels();
		}
		else
		{
			devkit_PSGRestoreVolumes();
		}
	}

	if( global_pause )
	{
		continue;
	}

	devkit_SMS_initSprites();
	engine_input_manager_update();

	engine_screen_manager_update();

	devkit_SMS_finalizeSprites();
	devkit_SMS_waitForVBlank();
	devkit_SMS_copySpritestoSAT();

	devkit_PSGFrame();
	devkit_PSGSFXFrame();
}
</pre>


<br /><br />