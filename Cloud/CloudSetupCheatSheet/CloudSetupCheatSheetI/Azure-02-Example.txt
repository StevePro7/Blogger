<u>Azure AKS</u><br />
Microsoft provides Azure Kubernetes Services as fully managed Kubernetes container orchestration service.  Follow all instructions below in order to provision a Kubernetes cluster and end-to-end test its functionality. 
<br /><br />

<b>Pre-Requisites</b><br />
<table width="99%" border="1">
<tr><td>
<pre style="font-size: 12px;">
&nbsp;&nbsp;az login
</pre>
</td></tr>
</table>
<br />

<b>Check Resources</b><br />
<table width="99%" border="1">
<tr><td>
<pre style="font-size: 12px;">
&nbsp;&nbsp;az account list --output table
&nbsp;&nbsp;az group list --output table
&nbsp;&nbsp;az resource list --output table
&nbsp;&nbsp;az resource list --query "[?location=='northeurope']" --output table
&nbsp;&nbsp;az vm list --output table
&nbsp;&nbsp;az aks list --output table
&nbsp;&nbsp;az container list --output table
&nbsp;&nbsp;az storage account list --output table
&nbsp;&nbsp;az network public-ip list --output table
</pre>
</td></tr>
</table>
<br />
  
<b>Create Group</b><br />
<table width="99%" border="1">
<tr><td>
<pre style="font-size: 12px;">
&nbsp;&nbsp;az group create --name stevepro-azraks-rg --location northeurope --debug
</pre>
</td></tr>
</table>
<br />
  
<b>Security Principal</b><br />
<table width="99%" border="1">
<tr><td>
<pre style="font-size: 12px;">
&nbsp;&nbsp;az ad sp create-for-rbac --name ${USER}-sp --skip-assignment
</pre>
</td></tr>
</table>
<br /> 
<b>Output</b><br />
<table width="99%" border="1">
<tr><td>
<pre style="font-size: 12px;">
&nbsp;&nbsp;{
&nbsp;    "appId": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",
&nbsp;    "displayName": "stevepro-sp",
&nbsp;    "name": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",
&nbsp;    "password": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",
&nbsp;    "tenant": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",
&nbsp;&nbsp;}
</pre>
</td></tr>
</table>
<br />
  
<b>Export</b><br />
<table width="99%" border="1">
<tr><td>
<pre style="font-size: 12px;">
&nbsp;&nbsp;export AZ_SP_ID=&lt;value_from_appId&gt;
&nbsp;&nbsp;export AZ_SP_PASSWORD=&lt;value_from_password&gt;
</pre>
</td></tr>
</table>
<br />

<b>Create Cluster</b><br />
<table width="99%" border="1">
<tr><td>
<pre style="font-size: 12px;">
&nbsp;&nbsp;az aks create --name stevepro-azraks                 \
&nbsp;    --resource-group stevepro-azraks-rg               \
&nbsp;    --dns-name-prefix stevepro-azraks                 \
&nbsp;    --node-count 3                                    \
&nbsp;    --node-vm-size Standard_D2s_v3                    \
&nbsp;    --kubernetes-version 1.28                         \
&nbsp;    --ssh-key-value ~/.ssh/master_ssh_key.pub         \
&nbsp;    --service-principal ${AZ_SP_ID}                   \
&nbsp;    --client-secret ${AZ_SP_PASSWORD}                 \
&nbsp;    --load-balancer-sku standard                      \
&nbsp;    --network-plugin azure --debug
</pre>
</td></tr>
</table>
<br />

<b>Get Credentials</b><br />
<table width="99%" border="1">
<tr><td>
<pre style="font-size: 12px;">
&nbsp;&nbsp;export KUBECONFIG=~/.kube/config
&nbsp;&nbsp;az aks get-credentials --name stevepro-azraks        \
&nbsp;    --resource-group stevepro-azraks-rg --file ${KUBECONFIG}
</pre>
</td></tr>
</table>
<br />

<b>Deploy Test</b><br />
<table border="1" width="99%">
<tr><td>
<pre style="font-size: 12px;">
&nbsp;&nbsp;kubectl create ns test-ns
&nbsp;&nbsp;kubectl config set-context --current --namespace=test-ns
&nbsp;&nbsp;kubectl apply -f Kubernetes.yaml
&nbsp;&nbsp;kubectl port-forward service/flask-api-service 8080:80
&nbsp;&nbsp;curl http://localhost:8080
</pre>
</td></tr>
</table>
<br />

<b>Output</b><br />
<table width="99%" border="1">
<tr><td>
<pre style="font-size: 12px;">
&nbsp;&nbsp;Hello World (Python)!
</pre>
</td></tr>
</table>
<br />

<b>Shell into Node</b><br />
<table border="1" width="99%">
<tr><td>
<pre style="font-size: 12px;">
&nbsp;&nbsp;mkdir -p ~/GitHub/luksa
&nbsp;&nbsp;cd ~/GitHub/luksa
&nbsp;&nbsp;git clone https://github.com/luksa/kubectl-plugins.git
&nbsp;&nbsp;cd kubectl-plugins
&nbsp;&nbsp;chmod +x kubectl-ssh
&nbsp;&nbsp;kubectl get nodes
&nbsp;&nbsp;./kubectl-ssh node gke-stevepro-gcp-gke-default-pool-0b4ca8ca-sjpj
</pre>
</td></tr>
</table>
<br />

<b>Cleanup</b><br />
<table border="1" width="99%">
<tr><td>
<pre style="font-size: 12px;">
&nbsp;&nbsp;kubectl delete -f Kubernetes.yaml
&nbsp;&nbsp;kubectl delete ns test-ns
</pre>
</td></tr>
</table>
<br />
  
<b>Delete Cluster</b><br />
<table width="99%" border="1">
<tr><td>
<pre style="font-size: 12px;">
&nbsp;&nbsp;az aks delete --name stevepro-azraks                 \
&nbsp;    --resource-group stevepro-azraks-rg
</pre>
</td></tr>
</table>
<br />

<b>Delete Group</b><br />
<table width="99%" border="1">
<tr><td>
<pre style="font-size: 12px;">
&nbsp;&nbsp;az group delete --name stevepro-azraks-rg --yes --no-wait
&nbsp;&nbsp;az group delete --name NetworkWatcherRG --yes --no-wait
</pre>
</td></tr>
</table>
<br />