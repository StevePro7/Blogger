<span style="font-family:verdana;font-size:85%;">

<a href="https://en.wikipedia.org/wiki/Kubernetes">Kubernetes</a> is an open source container orchestration system for automating application deployment, scaling and management.  Maintained by the Cloud Native Computing Foundation, Kubernetes works with a range of container tools and runs applications deployed in containers in a cluster often with images built using <a href="https://steveproxna.blogspot.com/2021/08/docker-cheat-sheet.html">Docker</a>.
<br />
<!--
<a href="https://1.bp.blogspot.com/-ZXeJTM4CjkA/YVIh6qriF8I/AAAAAAAAHco/Jr7_2tXARisKKV-wFuE9N9xIaecewo9xwCLcBGAsYHQ/s480/kubernetes.png"><img alt="" border="0" width="98%" src="https://1.bp.blogspot.com/-ZXeJTM4CjkA/YVIh6qriF8I/AAAAAAAAHco/Jr7_2tXARisKKV-wFuE9N9xIaecewo9xwCLcBGAsYHQ/s600/kubernetes.png"/></a>
-->
<br />
Let's check it out!  
<br /><br />
<u>Tools</u><br />
Here are some commonly used <a href="https://kubernetes.io/docs/tasks/tools">tools</a> that can be installed and to work with and manage Kubernetes clusters:
<br />
<!--
<table width="97%" border="1">
<tr>
<td valign="top">&nbsp;<a href="https://kubernetes.io/docs/reference/kubectl/kubectl"><b>kubectl</b></a></td>
<td valign="top">&nbsp;Command-line used to run commands against Kubernetes clusters</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="https://minikube.sigs.k8s.io/docs"><b>minikube</b></a></td>
<td valign="top">&nbsp;Runs a single-node Kubernetes cluster on your personal computer </td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="https://kind.sigs.k8s.io/docs"><b>kind</b></a></td>
<td valign="top">&nbsp;Runs Kubernetes on your local computer inside Docker containers</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm"><b>kubeadm</b></a>
</td>
<td valign="top">&nbsp;Used to create and manage and secure larger Kubernetes clusters</td>
</tr>
</table>
-->
<br>
<u>Installation</u><br />
Install Kubernetes with Docker Desktop on <a href="https://docs.docker.com/docker-for-windows/install">Windows</a> and <a href="https://docs.docker.com/docker-for-mac/install">Mac OS/X</a>.  Install Kubernetes on Linux accordingly.
<br /><br />
<b>Minikube</b><br />
Here are <a href="https://kubernetes.io/blog/2019/03/28/running-kubernetes-locally-on-linux-with-minikube-now-with-kubernetes-1.14-support">instructions</a> how to get Kubernetes running locally as single node cluster on Ubuntu with Minikube:
<br />
<!--
<pre class="csharp" name="code">
# Prerequisites
sudo apt install cpu-checker && sudo kvm-ok
sudo kvm-ok

sudo apt install libvirt-clients libvirt-daemon-system qemu-kvm \
    && sudo usermod -a -G libvirt $(whoami) \
    && newgrp libvirt
    
sudo virt-host-validate

# kubectl (Kubernetes CLI) installation
curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl \
    && sudo install kubectl /usr/local/bin && rm kubectl
    
# Minikube KVM driver installation
curl -LO https://storage.googleapis.com/minikube/releases/latest/docker-machine-driver-kvm2 \
    && sudo install docker-machine-driver-kvm2 /usr/local/bin/ && rm docker-machine-driver-kvm
    
# Minikube installation
curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 \
    && sudo install minikube-linux-amd64 /usr/local/bin/minikube && rm minikube-linux-amd64
    
# Verify the Minikube installation
minikube version
minikube start
minikube dashboard
</pre>
-->
  
<!--
<a href="https://1.bp.blogspot.com/-ZwTq-wMESmE/YPWzQ_Q7y_I/AAAAAAAAHHo/cMAXOAUCg6Mzz3cgdn6bB7yfS67CL-7vACLcBGAsYHQ/s816/MiniKube.png"><img alt="" border="0" width="98%" src="https://1.bp.blogspot.com/-ZwTq-wMESmE/YPWzQ_Q7y_I/AAAAAAAAHHo/cMAXOAUCg6Mzz3cgdn6bB7yfS67CL-7vACLcBGAsYHQ/s600/MiniKube.png"/></a>
-->
<br />  
<b>KinD</b><br />
Kubernetes in Docker [KinD] allows an approach to run a Kubernetes cluster using Docker containers to simulate multiple Kubernetes nodes operating at once instead of running everything in virtual machine.
<br />
<!--
-->
<table width="99%" border="1">
<tr>
<td valign="top">
<pre class="csharp" name="code">
&nbsp;go get sigs.k8s.io/kind

&nbsp;# Add KinD to $PATH in ~/.bashrc
&nbsp;export PATH="$PATH:~/go/bin/"
&nbsp;sudo reboot
</pre>
</td>
<td valign="top">
<pre class="csharp" name="code">
&nbsp;# Create test and delete cluster
&nbsp;kind create cluster --wait 5m \
&nbsp;export KUBECONFIG="$(kind get kubeconfig-path)"
&nbsp;kubectl cluster-info
&nbsp;kind delete cluster
</pre>
</td>
</tr>
</table>
<!--
-->
<br />
Launch Terminal.  Enter the following commands to initiate and configure the KinD dashboard in the browser.
<br />
<!--
-->
<pre class="csharp" name="code">
kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.1.0/aio/deploy/recommended.yaml
kubectl get pod -n kubernetes-dashboard
kubectl create clusterrolebinding default-admin --clusterrole cluster-admin --serviceaccount=default:default

token=$(kubectl get secrets -o jsonpath="{.items[?(@.metadata.annotations['kubernetes\.io/service-account\.name']==\
'default')].data.token}"|base64 --decode)
echo $token
kubectl proxy
</pre>
<!--  
-->
<br />
IMPORTANT<br />
If you receive following <i>error: listen tcp 127.0.0.1:8001: bind: address already in use</i> then enter command: <i>sudo fuser -k 8001/tcp</i>
<br /><br />
Launch browser and enter the URL as per below.  Once prompted enter the service token above and click OK.
<i>http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy</i>
<br /><br />    


<b>kubeadm</b><br />
Here are instructions blah blah TODO kubeadm:
<br /><br />


<br />
IMPORTANT<br />
Enable auto completion as per the kubectl <a href="https://kubernetes.io/docs/reference/kubectl/cheatsheet">Cheat Sheet</a> and update ~/.bashrc to alias the kubectl command:
<pre class="csharp" name="code">
# Auto complete
source <(kubectl completion bash)
echo "source <(kubectl completion bash)" >> ~/.bashrc

# Alias kubectl
alias k='kubectl'
complete -F __start_kubectl k
alias kdr='kubectl --dry-run=client -o yaml'
</pre>
<br /><br />

</span>