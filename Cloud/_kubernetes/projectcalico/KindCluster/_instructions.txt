Instructions
07/10/2021

KinD Cluster Setup

Reference:
https://kind.sigs.k8s.io/docs/user/configuration/#networking


01.
Create KinD cluster with custom KinD configuration
kind create cluster --config=kind-calico.yaml


02.
After kind cluster is created launch k9s
Install Calico

kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
Note - if you’d like to install particular version of calico

kubectl apply -f https://docs.projectcalico.org/v3.19/manifests/calico.yaml

This will add to the cluster
* calico-kube-controllers
* calico-node


03.
There is an issue with Felix with Calico-Node that needs to be applied in order to continue

kubectl -n kube-system set env daemonset/calico-node FELIX_IGNORELOOSERBF=true
Confirm the environment variable was applied OK

kubectl describe daemonsets.apps/calico-node -n kube-system | grep FELIX_IGNORELOOSERBF
Now cluster is operational


04.
When you update your own custom Felix image locally you can apply using kind load docker-image


e.g.
github.com/projectcalico/felix
make build
make image

tigera/cnx-node:latest-amd64


k9s
In the cluster annotate calico-node daemonset from calico-system namespace with unsupported.operator.tigera.io/ignore: "true"
e.g.
Launch k9s | Navigate to daemonset calico-node | press “e” to edit and add annotation


unsupported.operator.tigera.io/ignore: "true"
This will prevent the operator from changing it.
i.e. kube-system calico-node Daemonset


apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    deprecated.daemonset.template.generation: "2"
    unsupported.operator.tigera.io/ignore: "true"
    kubectl.kubernetes.io/last-applied-configuration: |



Launch k9s | Edit “calico-node” pod
Update the calico image


image: whatever
Load the custom calico-node image build above


kind load docker-image whatever
kind load docker-image puts image to be available for the cluster