Kubernetes Application Development - v1.0.2
`9/08/2021

15
context
profile in K8s

k config view

k config get-contexts
k config use-context XXXX


17
k command resource options

resource
po	pod
svc	service
ns	namespace


k explain <object>

k explain pod
k explain pod --recursive

kubectl explain pod.spec.volumes
kubectl explain pod.metadata --recursive



kubectl get <resource> -o yaml --export=true
kubectl get pod -o yaml --export=true

DEPRECATED
https://stackoverflow.com/questions/61392206/kubectl-export-is-deprecated-any-alternative

kubectl get secret <secretname> -ojson | jq 'del(.metadata.namespace,.metadata.resourceVersion,.metadata.uid) | .metadata.creationTimestamp=null'



kubectl get all
kubectl describe all


19
image
container
good diagram



21
docker build . -t node-welcome-app
docker run -d -p 3000 node-welcome-app:latest

curl localhost:49158


23
Pod


25
IMPORTANT
when we want minikube to use local Docker images built on localhost
and added to the minikube image cache then run this command

eval $(minikube docker-env)
docker build . -t my-first-image:1.0.0


27
k create -f pod.yaml
kubectl create -f pod.yaml
k get po -A


kubectl exec -it my-first-pod -c my-first-container bash

IMPORTANT
I think is better to use this syntax plus don't seem to have to state container
k exec -it my-first-pod --bash

NOTE
equivalent to SSH into pod

make request inside pod using curl

curl http://	localhost:3000


28
busybox
image that contains common Unix utilites



30
API server

31
controller manager
runs infinite loop

31
kubelet
agent on every worker node used to manage lifecycle of the node
process that runs on each worker node responsible for state of that node
e.g.
start / stop containers as directed by master
ensure containers remain healthy


32
kube-proxy
networking proxy communicates with other services in the cluster and the master node


34
which apiversion should I use
https://matthewpalmer.net/kubernetes-app-developer/articles/kubernetes-apiversion-definition-guide.html


38
sh -c
define shell commands	


Custom commands
kubectl apply -f custom-command-pod.yaml
k logs custom-command-pod


k exec -it custom-command-pod -c command-container bash
ERROR
because no image used here
but can go on to Kubernetes dashboard and shell but w/ same error


39
ENV VARS
k apply -f env-var.yaml

dashboard | shell
echo $BASE_URL
ttps://api.company.com/


40
k apply -f liveness-readiness-probe.yaml 
kubectl describe pod liveness-readiness-pod


43
security context

volume
like a regular directory on your computer filesystem


44
kubectl apply -f security-context.yaml

security context example
kubectl exec security-context-pod -- ls -l /etc/directory
-rw-r--r--    1 32000    23112         2697 Aug 19 17:53 file.txt



k exec security-context-pod -- cat /etc/directory/file.txt

IMPORTANT
with regards to exec

this may not work
k exec -it security-context-pod -c example-container -- bash
e.g.
OCI runtime exec failed: exec failed: container_linux.go:380: starting container process caused: exec: "bash": executable file not found in $PATH: unknown
command terminated with exit code 126


but this may work
k exec -it security-context-pod -c example-container /bin/sh
cd /etc/directory
cat file.txt | wc -l




46
Sidecar pattern
k apply -f sidecar.yaml

minikube dashboard
Pods
pod-with-sidecar

bottom of screen
Containers
app-container
sidecar-container

k exec -it pod-with-sidecar -c app-container /bin/sh
k exec -it pod-with-sidecar -c sidecar-container /bin/sh


47
Adapter pattern
used to standardize and normalize application output or monitoring data for aggregation

k apply -f adapter.yaml

k exec -it pod-with-adapter -c app-container /bin/sh
k exec -it pod-with-adapter -c adapter-container /bin/sh


48
Ambassador pattern
useful way to connect containers with the outside world

essentially a proxy that allows other containers to connect to a port on localhost
while the ambassador container proxies these requests to the external world
e.g.
access database


50
namespaces
subdivide physical cluster into multiple virtual clusters

k config get-contexts

IMPORTANT
how to set default namespace for current context
k config set-context minikube --namespace=kube-system


51
labels
associate key value pairs to objects to help identify and query them later
vital for grouping objects in Kubernetes

set labels in metadata property inside labels dictionary

kubectl get pods --show-labels

k get all --show-labels


52
selectors
mechanism for performaing queries based on objects' labels
WHERE clause equivalent for SQL statement


use
-l
--selector

=
!
,	&&
in
notin
exists

e.g.
kubectl get all --selector='provider = kubernetes'


53
selectors in YAML
deployments
services

group pods into a service
e.g.
selector field in service spec
defines which pods receive requests sent to that service


e,g,
apiVersion: v1
kind: Service
metadata:
name: my-service
# ...
spec:
selector:
key: value
key2: value2


54
Annotations
store non-identifying metadata about our objects
defined in metadata dictionary like labels


55
deployments
manage a set of identical pods thru a single parent object
e.g.
kubectl run nginx-deployment --image=nginx --replicas=3

ERROR


kubectl apply -f deployment_test01.yaml

k delete pod my-nginx-544d7d679b-pj99j 


57
iMPORTANT
deployment.spec.template
has the same metadata and spec dictionary as pod


58
deployment strategy
Recreate
RollingUpdate		preferred + more commonly used
- maxUnavailable
- maxSurge


59
kubectl rollout
e.g.
k rollout history deployment

k apply deployment_test02.yaml
k rollout status deployments my-nginx
k describe deployments my-nginx


61
k rollout history deployment my-nginx
k rollout history deployment my-nginx --revision=1
k rollout history deployment my-nginx --revision=2

UNDO
k rollout undo deployment my-nginx --to-revision=1


61
autoscaling
based on resource usage w/ Horizontal Pod Autoscaler resource

e.g.
kubectl scale deployment my-nginx --replicas=8


63
services

deployment
responsible for keeping a set of pods running

service
responsible for enabling network access to a set of pods

e.g.
64
k apply -f service.pods.yaml
k apply -f my-service.yaml


66
request to service routed


clusterIP
service internal IP address

IMPORTANT
service is hosted on minikube
but how did I find out the IP address for minikube?

Reference
https://minikube.sigs.k8s.io/docs/commands/ip

minikube ip
192.168.49.2

and service is expose on NodePort
30163

so
curl http://192.168.49.2:30163
Hostname: dc534047acbb

curl http://192.168.49.2:30163
Hostname: dc534047acbb, date: Sat Jun 16 21:57:15 UTC 2018

NodePort will choose either pod1 or pod2
and send to corresponding pod IP address
172.17.0.5
172.17.0.6
on port 80
because that is the service target port which is also the container port


BTW
access the service from inside the cluster on this socket will work
10.107.242.86:8080

access the pods from inside the cluster on socket will work
172.17.0.5:80
172.17.0.6:80


70
2x deployment 1x service example


73
volumes
provides storage to pod and container(s) running inside it
essentially a directory
 

74
k apply -f simple-volume-pod.yaml

types of volumes

emptyDir
nfs		network file system
hostPath
configMap
secret


76 
persistent volumes
storage that persists beyond containers, pods and node restarts
k apply -f my-persistent-volume.yaml


76
persistent volume claims