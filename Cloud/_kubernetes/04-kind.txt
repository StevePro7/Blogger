KinD
21/07/2021


<u>04-KinD</u><br />
Kubernetes in Docker [KinD] allows an approach to run a Kubernetes cluster using Docker containers to simulate multiple Kubernetes nodes operating at once instead of running everything in virtual machine.
<br /><br />
Launch Terminal.  Enter the following command to install KinD.  Export the path in ~/.bashrc and reboot:
<br />
<!--
<table width="96%" border="1">
<tr>
<td valign="top">
<pre class="csharp" name="code">
&nbsp;go get sigs.k8s.io/kind

&nbsp;# Add KinD to $PATH in ~/.bashrc
&nbsp;export PATH="$PATH:~/go/bin/"
&nbsp;sudo reboot
</pre>
</td>
<td valign="top">
<pre class="csharp" name="code">
&nbsp;# Create test and delete cluster
&nbsp;kind create cluster --wait 5m \
&nbsp;export KUBECONFIG="$(kind get kubeconfig-path)"
&nbsp;kubectl cluster-info
&nbsp;kind delete cluster
</pre>
</td>
</tr>
</table>
-->
<br />




<u>04b-KinD Dashboard</u><br />
Launch Terminal.  Enter the following commands to initiate and configure the KinD dashboard in the browser.
<pre class="csharp" name="code">
kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.1.0/aio/deploy/recommended.yaml
kubectl get pod -n kubernetes-dashboard
kubectl create clusterrolebinding default-admin --clusterrole cluster-admin --serviceaccount=default:default

token=$(kubectl get secrets -o jsonpath="{.items[?(@.metadata.annotations['kubernetes\.io/service-account\.name']==\
'default')].data.token}"|base64 --decode)
echo $token
kubectl proxy
</pre>
<br />
IMPORTANT<br />
If you receive following <i>error: listen tcp 127.0.0.1:8001: bind: address already in use</i> then enter command: <b>sudo fuser -k 8001/tcp</b>
<br /><br />
Launch browser and enter the URL as per below.  Once prompted enter the service token above and click OK.
<i>http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy</i>
<br /><br />    

KinD dashboard
https://istio.io/latest/docs/setup/platform-setup/kind

kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.1.0/aio/deploy/recommended.yaml

kubectl get pod -n kubernetes-dashboard

kubectl create clusterrolebinding default-admin --clusterrole cluster-admin --serviceaccount=default:default

token=$(kubectl get secrets -o jsonpath="{.items[?(@.metadata.annotations['kubernetes\.io/service-account\.name']=='default')].data.token}"|base64 --decode)

echo $token

kubectl proxy

If you receive an error
error: listen tcp 127.0.0.1:8001: bind: address already in use
sudo fuser -k 8001/tcp

http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/