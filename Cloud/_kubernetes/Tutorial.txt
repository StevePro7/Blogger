Tutorial
26/10/2021


Goal
Creating a Basic Web Server
01. locally
02. docker
03. kubernetes


00. setup
mkdir TestWebAPI
go mod init testwebapi
touch main.go


01. locally
build code
go run main.go


If port already in use then
sudo fuser -k 8081/tcp


curl http://localhost:8081
curl http://localhost:8081/hi
curl http://localhost:8081/test


02. docker
touch Dockerfile

Reference
https://steveproxna.blogspot.com/2021/08/docker-cheat-sheet.html

Ctrl+Shift+P. Choose Docker: Add Docker Files to Workspace...
Select Application Platform. Choose GoLang
What port does app listen on? Choose 8081
Include optional Docker Compose files? Select No

right click Dockerfile
Build image

right click "testwebapi" image
Run interactive

curl http://localhost:8081
curl http://localhost:8081/hi
curl http://localhost:8081/test

IMPORTANT
default is to build golang using alpine
which is OK for simple Go programs but more complex programs
or programs that require CGO enabled won't work : may have to use 


03. kubernetes
Launch terminal

minikube docker-env
eval $(minikube -p minikube docker-env)

IMPORTANT
ensure that the following returns empty!
docker ps | grep webapi

~/GitHub/StevePro7/GolangWebApplicationFirewall/55-TestAPI_Docker
docker build -t stevepro/testwebapi:1.0 .

kubectl apply -f Kubernetes.yaml

minikube service testwebapi-service --url
e.g.
http://192.168.49.2:30985
http://192.168.49.2:30523


curl http://192.168.49.2:32236
curl http://192.168.49.2:32236
curl http://192.168.49.2:32236/hi
curl http://192.168.49.2:32236/test


kubectl delete -f Kubernetes.yaml
