<b>Container Orchestration: Enter Kubernetes</b>
<br />
  
Increased container adoption prompted the need for container orchestration technologies like Kubernetes to
manage scale and monitor containerized applications especially those hosted by managed Cloud providers.
  
<br /><br />
Functions: Auto-scaling, Self-healing, Load Balancing, Service Discovery
<br />
  
<table width="99%" border="1">
<tr>
<td>
&nbsp;<span style="font-family: 'Wingdings';">•</span>&nbsp;
orchestration systems can automatically scale apps based on denamd or sudden traffic spikes
<br />
&nbsp;<span style="font-family: 'Wingdings';">•</span>&nbsp;
if container or node fails then the orchestrator can restart or replace it = increased reliability!
<br />
&nbsp;<span style="font-family: 'Wingdings';">•</span>&nbsp;
incoming requests are automatically distributed across containers ensure optimal performance  
<br />
&nbsp;<span style="font-family: 'Wingdings';">•</span>&nbsp;
as containers move across nodes, services can be discovered without any manual intervention
</td>
</tr>
</table>
<br />