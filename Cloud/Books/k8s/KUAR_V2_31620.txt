Kubernetes up and running
21/07/2021

https://github.com/kubernetes-up-and-running/examples


pg.30
$
$
$
$ kind create cluster --wait 5m \
export KUBECONFIG="$(kind get kubeconfig-path)"
kubectl cluster-info
kind delete cluster


pg.31
kubectl get componentstatuses

pg.33
k get nodes
k describe nodes

pg.34
kube proxy

pg.35
dns
k ui


pg.37
context

pg.38
JSONPath query lang

pg.39
k edit
view last applied

pg.40
label + annotate
kubectl exec -it <pod-name> -- bash	

pg.41	TODO
if not bash or terminal
kubectl attach -it <pod-name>
k cp


pg.52
dport fwd

k logs previous

pg.53
log aggregation
fluentd
elasticsearch

Wireshark tcpdump packet capture

pg.54
health check
ensure main process of application always running

live check
app not just running but functioning properly

pg.55
readiness
container ready to serve requests

pg.56
resource requests + limits

pg.58
cpu-shares


pg.65
labels vs annotations

pg.68
change label

pg.69
pod-template-hash


pg.73
k delete deployments --all

summary


pg.79
kubectl get endpoints alpaca-prod --watch

pg.80
ssh <node> -L 8080:localhost:32711


pg.82
kubectl get endpoints alpaca-prod --watch


Pg.91
minikube tunnel

pg.108
pod run by replicaset

pg.110
hpa
heapster


pg.112
cascade flag

pg.115
get rs

rs manage pods
deploy manage replocasets


pg.131
intrusion detection sw


pg.161
image pull secrets


pg.164
recreate + update
pipe to stdout
k replace -f -
- = stdin


pg.168
service a/c
components run inside cluster


pg.169
role + rolebinding

pg.171
k get clusterroles

pg.172
can-i
reconcile


pg.196
admission controllers

pg.197
CRD

pg.199
informer pattern


pg.205
kubebuilder project

pg.222
code review YAml

223
feature flag

225
single file
