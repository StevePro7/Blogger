<span style="font-family:verdana;font-size:85%;">

<br /><br />
  
<a href="https://en.wikipedia.org/wiki/Docker_(software)">Docker</a> is a Platform as a Service product that uses OS-level virtualization to deliver software in packages called containers.  Containers are isolated from one another and bundle their own software + libraries and configuration files yet share single operating system kernel thus use fewer resource than virtual machines.
<br />
<!--
<a href="https://1.bp.blogspot.com/-8rHlQefLyrg/YPWfgoEbuUI/AAAAAAAAHHc/dmypGeOVJ2cZ1h_hW5HHp2pPALPwsBKeACLcBGAsYHQ/s480/docker-logo.png"><img alt="" border="0" width="98%" src="https://1.bp.blogspot.com/-8rHlQefLyrg/YPWfgoEbuUI/AAAAAAAAHHc/dmypGeOVJ2cZ1h_hW5HHp2pPALPwsBKeACLcBGAsYHQ/s600/docker-logo.png"/></a>
-->
<br />
Let's check it out!
<br /><br />
<u>Installation</u><br />
Docker Engine is available on a variety of <a href="https://docs.docker.com/engine/install/#server">Linux</a> platforms.  On <a href="https://docs.docker.com/docker-for-windows/install">Windows</a> and <a href="https://docs.docker.com/docker-for-mac/install">Mac OS/X</a> it is easiest to install Docker Desktop as a static binary installation.  <a href="https://docs.docker.com/engine/install">Install</a> Docker Engine as per Operating System instructions.
<br /><br />
<b>Windows</b><br />
<a href="https://docs.docker.com/docker-for-windows/install">Install</a> Docker Desktop on Windows which will install the Docker Engine, Docker Compose and Kubernetes.
<br /><br />
<b>Mac OS/X</b><br />
<a href="https://docs.docker.com/docker-for-mac/install">Install</a> Docker Desktop on Mac OS/X which will install the Docker Engine, Docker Compose and Kubernetes.
<br /><br />
<b>Linux</b><br />
Docker provides .deb + .rpm packages for various Linux distributions.  For example <a href="https://phoenixnap.com/kb/how-to-install-docker-on-ubuntu-18-04">Install</a> Docker on Ubuntu:
<pre class="csharp" name="code">
sudo apt-get update
sudo apt-get remove docker docker-engine docker.io
sudo apt install docker.io
sudo systemctl start docker
sudo systemctl enable docker
docker version
docker images
</pre>
<br />
The final 2x commands may throw the following error while trying to connect to the Docker daemon socket:
<!--
<a href="https://1.bp.blogspot.com/-0tSR8B_6-Yw/YPWddYg5dlI/AAAAAAAAHHI/2Lh7IAtxo10QBI8qaK2E5-up9XSixnBYgCLcBGAsYHQ/s745/01-InstallError.png"><img alt="" border="0" width="98%" src="https://1.bp.blogspot.com/-0tSR8B_6-Yw/YPWddYg5dlI/AAAAAAAAHHI/2Lh7IAtxo10QBI8qaK2E5-up9XSixnBYgCLcBGAsYHQ/s600/01-InstallError.png"/></a>
-->
<br /><br />
Here is one way to fix "Got permission denied while trying to connect to the Docker daemon socket" error:
<pre class="csharp" name="code">
sudo groupadd docker
sudo usermod -aG docker ${USER}
sudo reboot
docker version
docker images
</pre>
<br />
IMPORTANT<br />
You may also like to install docker-compose if you eventually execute multiple Dockerfiles [mentioned later]:
<pre class="csharp" name="code">
sudo apt install docker-compose
</pre>
<br />
<!--<br />-->

<u>Definitions</u><br />
When you <a href="https://www.youtube.com/watch?v=YFl2mCHdv24">learn</a> Docker, you find that <a href="https://www.codeproject.com/Articles/5298027/A-Brief-Docker-Overview">Docker</a> Images are simply templates used to build Docker Containers.  Docker Containers are small isolated environments which are runnable version of their Images.  Finally, the Dockerfile contains all the commands that specify how an Image should be built and Container should run.
<br /><br />
</span>