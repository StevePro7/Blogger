<span style="font-family:verdana;font-size:85%;">
<u>Cloud</u><br />
Cloud Computing TODO<br />
cloud Native TODO<br />
<br />
<u>Golang</u><br />
<br />
<u>Cgo</u><br />
CGo is a technology which allows Go programs to interoperate with C libraries.  For example distributed cloud computing packages that consume ModSecurity C/C++ library for Web Applicaton Firewall (WAF) detection.
<br /><br />
Another example <b>eBPF</b>: a revolutionary technology that can run sandboxed C programs safely and efficiently extending the capabilities of the Linux kernel, without requiring changes to kernel source code or load kernel modules, consumed from Go packages providing high-performance networking in cloud native environments.
<br /><br />

<u>Summary</u><br />
Writing low level C code to target 8-bit Sega Master System hardware and now the 16-bit Sega MegaDrive it has proved to be very valuable experience to build Cloud Computing, Go and CGo applications going forward.  The next challenge is port projects exclusively on Windows and include Linux system builds cross platform <span style='font-family:Wingdings'>J</span><span><o:p></o:p></span>
<br /><br />
<br /><br />
<br /><br />
Writing low level C code to target 8-bit Sega Master System hardware and now the 16-bit Sega MegaDrive it has proved to be very valuable experience to build Cloud Computing, Go and CGo applications going forward.
<br /><br />
The challenge now is to port previous work on Windows only cross platform to Linux systems
<br /><br />
Writing low level C code to target 8-bit Sega Master System hardware and now the 16-bit Sega MegaDrive it has proved to be very valuable experience going forward for Cloud Computing, Go and CGo applications.
<br /><br />  
After years of writing low level C code to target 8-bit Sega Master System hardware and now 16-bit Sega MegaDrive hardware has proved to be very valuable experience going forward for Cloud Computing, Go and CGo applications.
<br /><br />  
  performance-critical algorithms to be written at all times to achieve consistent maximum frame rate
<br /><br />
  with limited memory and storage requires performance-critical algorithms to be written to achieve maximum frame rate at all times.
Therefore, completing projects in low level C code for old 8-bit and 16-bit 

Future
  
</span>