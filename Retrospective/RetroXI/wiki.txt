<span style="font-family:verdana;font-size:85%;">

Last year, I conducted a simple retrospective for 2018. Therefore, here is a retrospective for 2019.
<br /><br />
<u>2019 Achievements</u><br />
<table width="100%">
<tr>
<td valign="top">
<ul>
<li>Streamline Sega Master System retro game development using the <a href="https://steveproxna.blogspot.com/2019/04/devkitsms-programming-sample-iii.html">devkitSMS</a></li>
<li>Win the Sega Master System annual coding <a href="https://www.smspower.org/Competitions/Coding-2019">competition</a> with Platform Explorer</li>
<li>Apply devkitSMS programming skills to Mega Drive prototypes using the SGDK</li>
<li><a href="http://steveproxna.blogspot.com/2019/11/mobile-video-game-updates.html">Upgrade</a> MonoGame version cross platform for future 3D graphics and shaders</li>
<li>Complete <a href="http://steveproxna.blogspot.com/2019/09/linux-setup-cheat-sheet.html">Linux</a> installation process using virtual machine on Windows and Mac</li>
<li>Integrate new scripting languages including Python, Powershell and Terrarform</li>
<li>Expand cloud computing experience: <a href="https://aws.amazon.com">Amazon</a> Web services and <a href="https://dev.azure.com">Azure</a> DevOps</li>
<li>Learn from Data Scientists and Machine Learning Engineers strategies at work</li>
</ul>
Note: winning the Sega Master System annual coding competition is a unique achievement!
</td>
</tr>
</table>
<br />
<u>2020 Objectives</u><br />
<table width="100%">
<tr>
<td valign="top">
<ul>
<li>Setup Sega dev + debugging environment for MegaDrive similar to Master System</li>
<li>Build <a href="http://www.monogame.net">MonoGame</a> project cross platform containing 3D models and custom shaders</li>
<li>Integrate new software deployment techniques for <a href="http://www.webopedia.com/TERM/C/containerization.html">containerization</a> + <a href="http://www.webopedia.com/TERM/O/orchestration.html">orchestration</a></li>
<li>Continue <a href="https://en.wikipedia.org/wiki/Artificial_intelligence">AI</a> and <a href="https://en.wikipedia.org/wiki/Machine_learning">Machine Learning</a> application to personal and professional projects</li>
</ul>
</td>
</tr>
</table>
<br />

<u>Personal</u><br />
Earlier in 2019, I gave presentation on Game Development.  I believe this provides excellent experience for Software Engineering in general because algorithms must be written efficiently to achieve consistent frame rates.  Therefore, after working with Sega <a href="https://en.wikipedia.org/wiki/Master_System">Master System</a> would now like to experiment with the <a href="https://en.wikipedia.org/wiki/Sega_Genesis">Mega Drive</a>!
<br /><br />
<br />
<u>Professional</u><br />
20 <a href="https://towardsdatascience.com/20-predictions-about-software-development-trends-in-2020-afb8b110d9a0">Predictions</a> about Software Development trends in 2020 include: Infrastructure as all roads lead to Cloud, Containerization [<a href="https://en.wikipedia.org/wiki/Docker_(software)">Docker</a>] + Orchestration [<a href="https://en.wikipedia.org/wiki/Kubernetes">Kubernetes</a>] and Microservices as REST APIs will be mainstream.
<br /><br />
However, the big buzz continues to be centered around: Artificial Intelligence, Machine Learning and how can Big Data be leveraged by companies to improve their customer experiences and gain competitive advantage.
<br /><br />
<br />
<u>Future</u><br />
After giving the presentation earlier in 2019, I was advised afterwards about a new interesting development connecting Artificial Intelligence and Video Games now described as <a href="https://upcommons.upc.edu/bitstream/handle/2117/110880/126662.pdf?sequence=1&isAllowed=y">Reinforcement Learning</a> in Video Games.
<br /><br />

Therefore, this seems excellent motivation to investigate Machine Learning <a href="https://data-flair.training/blogs/machine-learning-software">Software</a> such as <a href="https://en.wikipedia.org/wiki/TensorFlow">TensorFlow</a> for various applications of ML such as <a href="https://en.wikipedia.org/wiki/Reinforcement_learning">Reinforcement Learning</a> and see if this can be applied to Video Games <span style='font-family:Wingdings'>J</span><span><o:p></o:p></span>
<br /><br />


</span>