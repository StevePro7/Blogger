<span style="font-family:verdana;font-size:85%;">

stevepro update:<br />
In Visual Studio, add the build.bat script to Resource Files.  Connect the build.bat script to Ctrl + 1 keyboard shortcut as per this <a href="http://steveproxna.blogspot.com/2017/09/devkitsms-programming-setup.html">post</a>.  Press Ctrl + 1 to build + run the ROM output file all from within Visual Studio 2015.
<br /><br />
Congratulations! You have just written your first Mega Drive program using the <a href="https://github.com/Stephane-D/SGDK">SGDK</a>.

<a href="https://1.bp.blogspot.com/-P0e9rENeVP4/XvJmH5Y9a9I/AAAAAAAAGOc/Lr8C8B0HodY6lr6r5weLS25HmphxfROVwCLcBGAsYHQ/s1600/HelloWorld.png" imageanchor="1" ><img border="0" src="https://1.bp.blogspot.com/-P0e9rENeVP4/XvJmH5Y9a9I/AAAAAAAAGOc/Lr8C8B0HodY6lr6r5weLS25HmphxfROVwCLcBGAsYHQ/s640/HelloWorld.png" width="98%" height="526" /></a>

<br /><br />

In Visual Studio, add the build.bat script to Resource Files.  Connect build.bat to Ctrl + 1 keyboard shortcut as per this post.  Press Ctrl + 1 to build + run the ROM output file all from in Visual Studio.
<br /><br />
Follow this <a href="http://steveproxna.blogspot.com/2017/09/devkitsms-programming-setup.html">post</a> to connect build.bat to Ctrl + 1 keyboard shortcut.  Press Ctrl + 1 to build and launch ROM.  Congratulations! You have just written your first Mega Drive program using the <a href="https://github.com/Stephane-D/SGDK">SGDK</a>.
<br /><br />



<br /><br />
Add build.bat - post
<br /><br />
After making all the changes to the Hello World pro
<br /><br />




<br />
<br />








stevepro update:<br />


Follow this <a href="http://steveproxna.blogspot.com/2017/09/devkitsms-programming-setup.html">post</a> to connect build.bat to Ctrl + 1 keyboard shortcut.  Press Ctrl + 1 to build and launch ROM.  Congratulations! You have just written your first Mega Drive program using the <a href="https://github.com/Stephane-D/SGDK">SGDK</a>.
<a href="https://1.bp.blogspot.com/-P0e9rENeVP4/XvJmH5Y9a9I/AAAAAAAAGOc/Lr8C8B0HodY6lr6r5weLS25HmphxfROVwCLcBGAsYHQ/s1600/HelloWorld.png" imageanchor="1" ><img border="0" src="https://1.bp.blogspot.com/-P0e9rENeVP4/XvJmH5Y9a9I/AAAAAAAAGOc/Lr8C8B0HodY6lr6r5weLS25HmphxfROVwCLcBGAsYHQ/s640/HelloWorld.png" width="98%" height="526" /></a>
<br /><br />


<br /><br />

In the previous <a href="TODO">post</a>, we checked out SGDK Programming Setup. The SGDK is a free development kit which provides code and tools to compile resources and support homebrew development for the Sega <a href="https://segaretro.org/Sega_Mega_Drive">Mega Drive</a>.
<br /><br />

Using the <a href="https://github.com/Stephane-D/SGDK">SGDK</a>, it is possible to write game code using the <a href="http://en.wikipedia.org/wiki/C_(programming_language)">C language</a> rather than pure <a href="https://en.wikibooks.org/wiki/68000_Assembly">68000 assembly</a>. Therefore, we would now like to extend this knowledge and write more detailed programming sample code.
<!--
<a href="https://2.bp.blogspot.com/-ZsP4yKAHaUc/XvnRZiaYmNI/AAAAAAAAGQ0/UhAW8Sr_WC46PlbaC8m_gOmxg3L2jX_ugCLcBGAsYHQ/s1600/SonicRunning.png" imageanchor="1" ><img border="0" src="https://2.bp.blogspot.com/-ZsP4yKAHaUc/XvnRZiaYmNI/AAAAAAAAGQ0/UhAW8Sr_WC46PlbaC8m_gOmxg3L2jX_ugCLcBGAsYHQ/s640/SonicRunning.png" width="98%" height="509" /></a>
-->
Let's check it out!
<br /><br />

<u>Software</u><br />
Follow all instructions from the previous <a href="TODO">post</a>: this documents how to setup the pre-requisite software.
<br />
Note: ensure you have downloaded and installed the <a href="https://github.com/Stephane-D/SGDK">SGDK</a> and the GNU Compiler Collection [<a href="https://gcc.gnu.org/">GCC</a>].
<br /><br />

<u>Library</u><br />
Ultimately, we would like to build + debug step thru the C source code during SGDK development from in Visual Studio.  Therefore, we need to build custom version of SGDK library to replace functions with stubs.
<br /><br />
Launch Visual Studio 2015.  File | New | Project... | Visual C++ | Win32 | Win32 Project | Static Library:
<br />
<!--
<a href="https://3.bp.blogspot.com/-CBkI0hlMYe0/Xvnb1L7Cv6I/AAAAAAAAGRA/wjbk_W5E4D0fxruktU47Ff_p0MUpDoJIQCLcBGAsYHQ/s1600/StaticLibrary.png" imageanchor="1" ><img border="0" src="https://3.bp.blogspot.com/-CBkI0hlMYe0/Xvnb1L7Cv6I/AAAAAAAAGRA/wjbk_W5E4D0fxruktU47Ff_p0MUpDoJIQCLcBGAsYHQ/s640/StaticLibrary.png" width="98%" height="500" /></a>
-->
<br />

Create two folders <b><a href="https://github.com/SteveProXNA/SGDKcode/tree/master/SGDK_Library/Library/lib">lib</a></b> and <b><a href="https://github.com/SteveProXNA/SGDKcode/tree/master/SGDK_Library/Library/src">src</a></b>.  Copy all SGDK header files from <i>%GDK_WIN%\inc</i> and <i>%GDK_WIN%\res</i> beneath the <b>lib</b> folder.  For each header file create corresponding translation unit [*.c] file to the <b>src</b> folder.
<br />
<!--
<a href="https://3.bp.blogspot.com/-2fjiNwbtafI/Xvnb9vaZmXI/AAAAAAAAGRE/9xKyqZgITJYOJj9qTQsDF5gCIM-QeMk5ACLcBGAsYHQ/s1600/LibraryLayout.png" imageanchor="1" ><img border="0" src="https://3.bp.blogspot.com/-2fjiNwbtafI/Xvnb9vaZmXI/AAAAAAAAGRE/9xKyqZgITJYOJj9qTQsDF5gCIM-QeMk5ACLcBGAsYHQ/s640/LibraryLayout.png" width="98%" height="210" /></a>
-->
<br />
Finally, implement each header file function as stub function in each translation unit.  Build custom library.  Copy <i>_genesis.lib</i> and <i>_genesis.pdb</i> binaries to the <b>lib</b> folder.  This will be used to link sample source code.  Download custom library <b><a href="https://github.com/SteveProXNA/SGDKcode/tree/master/SGDK_Library/Library">here</a></b>.
<br /><br />

<u>Usage</u><br />
SGDK <a href="https://github.com/Stephane-D/SGDK/wiki/SGDK-Usage">uses</a> a generic makefile to compile project. In order to be properly recognized by the makefile you need to organize your project folder structure as following: Project root add sub folders: <i>inc</i>, <i>out</i>, <i>res</i>, <i>src</i>
<table width="97%" border="1">
<tr>
<td valign=top>&nbsp;inc&nbsp;</td>
<td valign=top>&nbsp;include files</td>
<td valign=top>&nbsp;*.h [C include file] or *.inc [assembly include file]</td>
</tr>
<tr>
<td valign=top>&nbsp;out&nbsp;</td>
<td valign=top>&nbsp;output files</td>
<td valign=top>&nbsp;<b>rom.bin</b> to be created automatically by makefile when SGDK project is built</td>
</tr>
<tr>
<td valign=top>&nbsp;res&nbsp;</td>
<td valign=top>&nbsp;resource files</td>
<td valign=top>&nbsp;*.res [resource definition file compiled by rescomp tool see bin/<a href="https://raw.githubusercontent.com/Stephane-D/SGDK/master/bin/rescomp.txt">rescomp.txt</a>]</td>
</tr>
<tr>
<td valign=top>&nbsp;src&nbsp;</td>
<td valign=top>&nbsp;source files</td>
<td valign=top>&nbsp;*.c [C source file], *.s [68000 asm source file] or *.s80 [Z80 asm source file]</td>
</tr>
</table>
<br />
<!--<br />-->

<u>Hello World</u><br />
Create folder C:\HelloWorld.  Copy new SGDK custom library <b><a href="https://github.com/SteveProXNA/SGDKcode/tree/master/SGDK_Library/Library/lib">lib</a></b> folder [above] here.  Create sub-folder: <b>dev</b>.  Change directory to <b>dev</b> folder and create the following sub-folders as indicated per Usage: <i>inc</i>, <i>out</i>, <i>res</i>, <i>src</i>
<br /><br />
Launch Visual Studio 2015.  File | New | Project... | Visual C++ | Win32 | Win32 Project
<!--  
<a href="https://3.bp.blogspot.com/-P0Iu_D-4JkQ/Xvob28c26KI/AAAAAAAAGRY/Vmk8Ji63r2oI5ifnLoGxh4b2X447TRiVgCLcBGAsYHQ/s1600/HelloWorld00.png" imageanchor="1" ><img border="0" src="https://3.bp.blogspot.com/-P0Iu_D-4JkQ/Xvob28c26KI/AAAAAAAAGRY/Vmk8Ji63r2oI5ifnLoGxh4b2X447TRiVgCLcBGAsYHQ/s640/HelloWorld00.png" width="98%" height="353" /></a>
<table width="99%" border="1">
<tr>
<td valign="top" width="50%">&nbsp;Name:</td>
<td valign="top" width="50%">&nbsp;Game</td>
</tr>
<tr>
<td valign="top">&nbsp;Location:</td>
<td valign="top">&nbsp;C:\HelloWorld\dev</td>
</tr>
<tr>
<td valign="top" width="50%">&nbsp;Create directory for solution</td>
<td valign="top" width="50%">&nbsp;UNCHECKED</td>
</tr>
</table>
OK
<br /><br />
<table width="99%" border="1">
<tr>
<td valign="top" width="50%">&nbsp;Application type:</td>
<td valign="top" width="50%">&nbsp;Console application</td>
</tr>
<tr>
<td valign="top" width="50%">&nbsp;Additional options:</td>
<td valign="top" width="50%">&nbsp;Empty project CHECKED</td>
</tr>
</table>
Finish
-->
<br /><br />
First, remove x64 build configuration!  Right click Solution | Properties.  Click Configuration Manager button.  Click Active solution platform drop down | Edit.  Click x64 option | Remove.  Now will have only Win32 build.
<br /><br />

Add the main.h source code to Header Files using the <i>inc</i> folder.  Add main.c to Source Files using <i>src</i> folder:
<br />
<!--
<table width="99%" border="1">
<tr>
<td>&nbsp;TODO main.h</td>
<td>&nbsp;TODO main.c</td>
</tr>
<tr>
<td>
<table border="0">
<tr>
<td width="99%">
<pre class="csharp" name="code">
&nbsp;#ifndef __MAIN__
&nbsp;#define __MAIN__

&nbsp;#ifdef _CONSOLE
&nbsp;  #include "_genesis.h"
&nbsp;#else
&nbsp;  #include &lt;genesis.h&gt;
&nbsp;#endif

&nbsp;#endif//__MAIN__
</pre>
</td>
</tr>
</table>
</td>
<td>
<table border="0">
<tr>
<td>
<pre class="csharp" name="code">
&nbsp;#include "main.h"
&nbsp;int main()
&nbsp;{
&nbsp;	VDP_drawText( "Hello Genny World!", 10, 13 );
&nbsp;	while( 1 )
&nbsp;	{
&nbsp;		VDP_waitVSync();
&nbsp;	}
&nbsp;	return 0;
&nbsp;}
</pre>
</td>
</tr>
</table>
</td>
</tr>
</table>
-->
<br />

Right click Project | Properties | Configuration Properties | General.  Set Output and Intermediate directories:
<br />
<!--
<a href="https://3.bp.blogspot.com/-ZfSOou2qH-k/XvoefTwA83I/AAAAAAAAGRk/-9yO3htI-BUFqO8tfu5T-Iy1oVM9f8J7ACLcBGAsYHQ/s1600/HelloWorld01.png" imageanchor="1" ><img border="0" src="https://3.bp.blogspot.com/-ZfSOou2qH-k/XvoefTwA83I/AAAAAAAAGRk/-9yO3htI-BUFqO8tfu5T-Iy1oVM9f8J7ACLcBGAsYHQ/s640/HelloWorld01.png" width="98%" height="407" /></a>
<table width="99%" border="1">
<tr>
<td valign="top" width="50%">&nbsp;Output Directory:</td>
<td valign="top" width="50%">&nbsp;$(SolutionDir)..\bin\$(ConfigurationName)</td>
</tr>
<tr>
<td valign="top" width="50%">&nbsp;Intermediate Directory:</td>
<td valign="top" width="50%">&nbsp;$(SolutionDir)..\obj\$(ConfigurationName)</td>
</tr>
</table>
-->
<br />
Right click Project | Properties | Configuration Properties | C++ | General.  Set Additional Include Directories:
<br />
<!-- 
<a href="https://3.bp.blogspot.com/-pVISIsj4tTc/XvpD8a50fbI/AAAAAAAAGRw/71YfCsYJuOko71qKWDc2HKd0SyRn1td2gCLcBGAsYHQ/s1600/HelloWorld02.png" imageanchor="1" ><img border="0" src="https://3.bp.blogspot.com/-pVISIsj4tTc/XvpD8a50fbI/AAAAAAAAGRw/71YfCsYJuOko71qKWDc2HKd0SyRn1td2gCLcBGAsYHQ/s640/HelloWorld02.png" width="98%" height="385" /></a>
<br />
<table width="99%" border="1">
<tr>
<td valign="top">&nbsp;Value:&nbsp;</td>
<td valign="top">&nbsp;$(SolutionDir)..\lib;$(ProjectDir)inc;$(ProjectDir)res;$(GDK_WIN)\inc;$(IncludePath)</td>
</tr>
</table>
-->
<br />
Right click Project | Properties | Configuration Properties | Linker | General | Additional Library Directories:
<br />
<!--
<a href="https://1.bp.blogspot.com/-wy3n4AJTucM/XvpFjhEhnzI/AAAAAAAAGR8/FzBXImQWtDk0Svicsj6t9m-PNsy16SmdgCLcBGAsYHQ/s1600/HelloWorld03.png" imageanchor="1" ><img border="0" src="https://1.bp.blogspot.com/-wy3n4AJTucM/XvpFjhEhnzI/AAAAAAAAGR8/FzBXImQWtDk0Svicsj6t9m-PNsy16SmdgCLcBGAsYHQ/s640/HelloWorld03.png" width="98%" height="385" /></a>
<br />
<table width="99%" border="1">
<tr>
<td valign="top" width="50%">&nbsp;Value:&nbsp;</td>
<td valign="top" width="50%">&nbsp;$(SolutionDir)..\lib</td>
</tr>
</table>
-->
<br />
Right click Project | Properties | Configuration Properties | Linker | Input.  Set the Additional Dependencies:
<!--
<br />
<a href="https://3.bp.blogspot.com/-uaC87298LNQ/XvpHIdZA9fI/AAAAAAAAGSQ/3usG1yGRfvMXJRGQFPhzzdrxRwwI1gGSACLcBGAsYHQ/s1600/HelloWorld04.png" imageanchor="1" ><img border="0" src="https://3.bp.blogspot.com/-uaC87298LNQ/XvpHIdZA9fI/AAAAAAAAGSQ/3usG1yGRfvMXJRGQFPhzzdrxRwwI1gGSACLcBGAsYHQ/s640/HelloWorld04.png" width="98%" height="407" /></a>
<br />
<table width="99%" border="1">
<tr>
<td valign="top" width="50%">&nbsp;Value:&nbsp;</td>
<td valign="top" width="50%">&nbsp;_genesis.lib;%(AdditionalDependencies)</td>
</tr>
</table>
-->
<br /><br />
Press Ctrl + Shift + B of [F7] to build source code.  Pressing F5 will now debug step through C source code!
<br /><br />
IMPORTANT<br />
The first time you F5 debug step through C source code you may be prompted to navigate to <b><a href="https://github.com/SteveProXNA/SGDKcode/tree/master/SGDK_Library/Library/src">src</a></b> directory.
<br /><br />

Add the following build.bat script to the <b><a href="TODO">dev</a></b> folder to automate process to build + run the ROM output file:
<pre class="csharp" name="code">
@echo off
cls
echo Building...

:: Time build START
set _time=%time: =0%
set /a _hours=100%_time:~0,2%%%100,_min=100%_time:~3,2%%%100,_sec=100%_time:~6,2%%%100,_cs=%_time:~9,2%
set /a _started=_hours*60*60*100+_min*60*100+_sec*100+_cs

:: Build
%GDK_WIN%\bin\make -f %GDK_WIN%\makefile.gen > NUL

:: Time build -END-
set _time=%time: =0%
set /a _hours=100%_time:~0,2%%%100,_min=100%_time:~3,2%%%100,_sec=100%_time:~6,2%%%100,_cs=%_time:~9,2%
set /a _duration=_hours*60*60*100+_min*60*100+_sec*100+_cs-_started
set /a _hours=_duration/60/60/100,_min=100+_duration/60/100%%60,_sec=100+(_duration/100%%60%%60),_cs=100+_duration%%100
echo.
echo Time taken: %_sec:~-2%.%_cs:~-2% secs
echo.

:: Run
C:\SEGA\Fusion\fusion.exe out\rom.bin
::C:\SEGA\gens\gens.exe %~dp0\out\rom.bin
</pre>
Here we <a href="https://stackoverflow.com/questions/673523/how-do-i-measure-execution-time-of-a-command-on-the-windows-command-line">measure</a> the build execution time.  Also, <a href="https://social.technet.microsoft.com/Forums/windows/en-US/66e60961-439d-47e9-8879-d75434ef7bb8/how-do-i-suppress-output-from-a-batch-file?forum=w7itprogeneral">suppress</a> the output of the build script to keep things clean.
The final solution should look like this:
<!-- -->
<a href="https://1.bp.blogspot.com/-4rOKC4tUOXA/XvpM5lYOs5I/AAAAAAAAGSc/E8MjGIlFSvoOOmsgsxKtxbwVUocDuCLpQCLcBGAsYHQ/s1600/HelloWorld05.png" imageanchor="1" ><img border="0" src="https://1.bp.blogspot.com/-4rOKC4tUOXA/XvpM5lYOs5I/AAAAAAAAGSc/E8MjGIlFSvoOOmsgsxKtxbwVUocDuCLpQCLcBGAsYHQ/s640/HelloWorld05.png" width="98%" height="387" /></a>
<!-- -->

<br /><br />

In Visual Studio, add the build.bat script to Resource Files.  Connect the build.bat script to Ctrl + 1 keyboard shortcut as per this <a href="http://steveproxna.blogspot.com/2017/09/devkitsms-programming-setup.html">post</a>.  Press Ctrl + 1 to build + run the ROM output file all from within Visual Studio 2015.
<br /><br />
Congratulations! You have just written your first Mega Drive program using the <a href="https://github.com/Stephane-D/SGDK">SGDK</a>.

<a href="https://1.bp.blogspot.com/-P0e9rENeVP4/XvJmH5Y9a9I/AAAAAAAAGOc/Lr8C8B0HodY6lr6r5weLS25HmphxfROVwCLcBGAsYHQ/s1600/HelloWorld.png" imageanchor="1" ><img border="0" src="https://1.bp.blogspot.com/-P0e9rENeVP4/XvJmH5Y9a9I/AAAAAAAAGOc/Lr8C8B0HodY6lr6r5weLS25HmphxfROVwCLcBGAsYHQ/s640/HelloWorld.png" width="98%" height="526" /></a>

<br /><br />

Demos

</span>